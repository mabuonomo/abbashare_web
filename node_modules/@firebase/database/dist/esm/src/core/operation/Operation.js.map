{"version":3,"sources":["../src/core/operation/Operation.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAEH,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAGxC;;;GAGG;AACH,MAAM,CAAN,IAAY,aAKX;AALD,WAAY,aAAa;IACvB,2DAAS,CAAA;IACT,mDAAK,CAAA;IACL,qEAAc,CAAA;IACd,uEAAe,CAAA;AACjB,CAAC,EALW,aAAa,GAAb,aAAa,KAAb,aAAa,QAKxB;AA4BD;;;;;;GAMG;AACH;IACE,yBACS,QAAiB,EACjB,UAAmB,EACnB,OAAsB,EACtB,MAAe;QAHf,aAAQ,GAAR,QAAQ,CAAS;QACjB,eAAU,GAAV,UAAU,CAAS;QACnB,YAAO,GAAP,OAAO,CAAe;QACtB,WAAM,GAAN,MAAM,CAAS;QAEtB,MAAM,CAAC,CAAC,MAAM,IAAI,UAAU,EAAE,qCAAqC,CAAC,CAAC;IACvE,CAAC;IACD;;;OAGG;IACI,oBAAI,GAAG,IAAI,eAAe;IAC/B,aAAa,CAAC,IAAI,EAClB,KAAK,EACL,IAAI;IACJ,WAAW,CAAC,KAAK,CAClB,CAAC;IAEF;;;OAGG;IACI,sBAAM,GAAG,IAAI,eAAe,CACjC,KAAK;IACL,eAAe,CAAC,IAAI,EACpB,IAAI;IACJ,WAAW,CAAC,KAAK,CAClB,CAAC;IAEF;;;OAGG;IACI,oCAAoB,GAAG,UAAS,OAAe;QACpD,MAAM,CAAC,IAAI,eAAe,CACxB,KAAK;QACL,eAAe,CAAC,IAAI,EACpB,OAAO;QACP,WAAW,CAAC,IAAI,CACjB,CAAC;IACJ,CAAC,CAAC;IACJ,sBAAC;CA3CD,AA2CC,IAAA;SA3CY,eAAe","file":"Operation.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  /**\n   * @type {!OperationSource}\n   */\n  source: OperationSource;\n\n  /**\n   * @type {!OperationType}\n   */\n  type: OperationType;\n\n  /**\n   * @type {!Path}\n   */\n  path: Path;\n\n  /**\n   * @param {string} childName\n   * @return {?Operation}\n   */\n  operationForChild(childName: string): Operation | null;\n}\n\n/**\n * @param {boolean} fromUser\n * @param {boolean} fromServer\n * @param {?string} queryId\n * @param {boolean} tagged\n * @constructor\n */\nexport class OperationSource {\n  constructor(\n    public fromUser: boolean,\n    public fromServer: boolean,\n    public queryId: string | null,\n    public tagged: boolean\n  ) {\n    assert(!tagged || fromServer, 'Tagged queries must be from server.');\n  }\n  /**\n   * @const\n   * @type {!OperationSource}\n   */\n  static User = new OperationSource(\n    /*fromUser=*/ true,\n    false,\n    null,\n    /*tagged=*/ false\n  );\n\n  /**\n   * @const\n   * @type {!OperationSource}\n   */\n  static Server = new OperationSource(\n    false,\n    /*fromServer=*/ true,\n    null,\n    /*tagged=*/ false\n  );\n\n  /**\n   * @param {string} queryId\n   * @return {!OperationSource}\n   */\n  static forServerTaggedQuery = function(queryId: string): OperationSource {\n    return new OperationSource(\n      false,\n      /*fromServer=*/ true,\n      queryId,\n      /*tagged=*/ true\n    );\n  };\n}\n"]}