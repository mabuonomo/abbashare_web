{"version":3,"sources":["../src/core/util/CountedSet.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAEH,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AAEtE;;;;GAIG;AACH;IAAA;QACE,QAAG,GAAuB,EAAE,CAAC;IA0E/B,CAAC;IAxEC;;;OAGG;IACH,wBAAG,GAAH,UAAI,IAAO,EAAE,GAAM;QACjB,IAAI,CAAC,GAAG,CAAC,IAAW,CAAC,GAAG,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAW,CAAC;IAC3D,CAAC;IAED;;;OAGG;IACH,6BAAQ,GAAR,UAAS,GAAM;QACb,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACjC,CAAC;IAED;;;OAGG;IACH,wBAAG,GAAH,UAAI,IAAO;QACT,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IACjE,CAAC;IAED;;OAEG;IACH,2BAAM,GAAN,UAAO,IAAO;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC,IAAW,CAAC,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,0BAAK,GAAL;QACE,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IAChB,CAAC;IAED;;;OAGG;IACH,4BAAO,GAAP;QACE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,0BAAK,GAAL;QACE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAED;;;OAGG;IACH,yBAAI,GAAJ,UAAK,EAAwB;QAC3B,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,UAAC,CAAI,EAAE,CAAI,IAAK,OAAA,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAR,CAAQ,CAAC,CAAC;IAC9C,CAAC;IAED;;;OAGG;IACH,yBAAI,GAAJ;QACE,IAAM,IAAI,GAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,UAAC,CAAI;YACrB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACH,iBAAC;AAAD,CA3EA,AA2EC,IAAA","file":"CountedSet.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isEmpty, getCount, forEach, contains } from '@firebase/util';\n\n/**\n * Implements a set with a count of elements.\n *\n * @template K, V\n */\nexport class CountedSet<K, V> {\n  set: { [k: string]: V } = {};\n\n  /**\n   * @param {!K} item\n   * @param {V} val\n   */\n  add(item: K, val: V) {\n    this.set[item as any] = val !== null ? val : true as any;\n  }\n\n  /**\n   * @param {!K} key\n   * @return {boolean}\n   */\n  contains(key: K) {\n    return contains(this.set, key);\n  }\n\n  /**\n   * @param {!K} item\n   * @return {V}\n   */\n  get(item: K): V | void {\n    return this.contains(item) ? this.set[item as any] : undefined;\n  }\n\n  /**\n   * @param {!K} item\n   */\n  remove(item: K) {\n    delete this.set[item as any];\n  }\n\n  /**\n   * Deletes everything in the set\n   */\n  clear() {\n    this.set = {};\n  }\n\n  /**\n   * True if there's nothing in the set\n   * @return {boolean}\n   */\n  isEmpty(): boolean {\n    return isEmpty(this.set);\n  }\n\n  /**\n   * @return {number} The number of items in the set\n   */\n  count(): number {\n    return getCount(this.set);\n  }\n\n  /**\n   * Run a function on each k,v pair in the set\n   * @param {function(K, V)} fn\n   */\n  each(fn: (k: K, v: V) => void) {\n    forEach(this.set, (k: K, v: V) => fn(k, v));\n  }\n\n  /**\n   * Mostly for debugging\n   * @return {Array.<K>} The keys present in this CountedSet\n   */\n  keys(): K[] {\n    const keys: K[] = [];\n    forEach(this.set, (k: K) => {\n      keys.push(k);\n    });\n    return keys;\n  }\n}\n"]}