{"version":3,"sources":["../src/core/view/ViewCache.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAEH,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AACpD,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAGxC;;;;;;GAMG;AACH;IACE;;;;OAIG;IACH,mBACmB,WAAsB,EACtB,YAAuB;QADvB,gBAAW,GAAX,WAAW,CAAW;QACtB,iBAAY,GAAZ,YAAY,CAAW;IACvC,CAAC;IAmBJ;;;;;OAKG;IACH,mCAAe,GAAf,UACE,SAAe,EACf,QAAiB,EACjB,QAAiB;QAEjB,MAAM,CAAC,IAAI,SAAS,CAClB,IAAI,SAAS,CAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAC5C,IAAI,CAAC,YAAY,CAClB,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,oCAAgB,GAAhB,UACE,UAAgB,EAChB,QAAiB,EACjB,QAAiB;QAEjB,MAAM,CAAC,IAAI,SAAS,CAClB,IAAI,CAAC,WAAW,EAChB,IAAI,SAAS,CAAC,UAAU,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAC9C,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,iCAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED;;OAEG;IACH,wCAAoB,GAApB;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE;YAC1C,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YAC5B,CAAC,CAAC,IAAI,CAAC;IACX,CAAC;IAED;;OAEG;IACH,kCAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,yCAAqB,GAArB;QACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE;YAC3C,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC7B,CAAC,CAAC,IAAI,CAAC;IACX,CAAC;IAjFD;;;OAGG;IACI,eAAK,GAAG,IAAI,SAAS,CAC1B,IAAI,SAAS,CACX,YAAY,CAAC,UAAU;IACvB,qBAAqB,CAAC,KAAK;IAC3B,aAAa,CAAC,KAAK,CACpB,EACD,IAAI,SAAS,CACX,YAAY,CAAC,UAAU;IACvB,qBAAqB,CAAC,KAAK;IAC3B,aAAa,CAAC,KAAK,CACpB,CACF,CAAC;IAmEJ,gBAAC;CA7FD,AA6FC,IAAA;SA7FY,SAAS","file":"ViewCache.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { CacheNode } from './CacheNode';\nimport { Node } from '../snap/Node';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n *\n * @constructor\n */\nexport class ViewCache {\n  /**\n   *\n   * @param {!CacheNode} eventCache_\n   * @param {!CacheNode} serverCache_\n   */\n  constructor(\n    private readonly eventCache_: CacheNode,\n    private readonly serverCache_: CacheNode\n  ) {}\n\n  /**\n   * @const\n   * @type {ViewCache}\n   */\n  static Empty = new ViewCache(\n    new CacheNode(\n      ChildrenNode.EMPTY_NODE,\n      /*fullyInitialized=*/ false,\n      /*filtered=*/ false\n    ),\n    new CacheNode(\n      ChildrenNode.EMPTY_NODE,\n      /*fullyInitialized=*/ false,\n      /*filtered=*/ false\n    )\n  );\n\n  /**\n   * @param {!Node} eventSnap\n   * @param {boolean} complete\n   * @param {boolean} filtered\n   * @return {!ViewCache}\n   */\n  updateEventSnap(\n    eventSnap: Node,\n    complete: boolean,\n    filtered: boolean\n  ): ViewCache {\n    return new ViewCache(\n      new CacheNode(eventSnap, complete, filtered),\n      this.serverCache_\n    );\n  }\n\n  /**\n   * @param {!Node} serverSnap\n   * @param {boolean} complete\n   * @param {boolean} filtered\n   * @return {!ViewCache}\n   */\n  updateServerSnap(\n    serverSnap: Node,\n    complete: boolean,\n    filtered: boolean\n  ): ViewCache {\n    return new ViewCache(\n      this.eventCache_,\n      new CacheNode(serverSnap, complete, filtered)\n    );\n  }\n\n  /**\n   * @return {!CacheNode}\n   */\n  getEventCache(): CacheNode {\n    return this.eventCache_;\n  }\n\n  /**\n   * @return {?Node}\n   */\n  getCompleteEventSnap(): Node | null {\n    return this.eventCache_.isFullyInitialized()\n      ? this.eventCache_.getNode()\n      : null;\n  }\n\n  /**\n   * @return {!CacheNode}\n   */\n  getServerCache(): CacheNode {\n    return this.serverCache_;\n  }\n\n  /**\n   * @return {?Node}\n   */\n  getCompleteServerSnap(): Node | null {\n    return this.serverCache_.isFullyInitialized()\n      ? this.serverCache_.getNode()\n      : null;\n  }\n}\n"]}