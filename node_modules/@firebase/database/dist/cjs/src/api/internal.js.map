{"version":3,"sources":["../src/api/internal.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,uEAAsE;AACtE,2EAA0E;AAG1E;;;;;;GAMG;AAEU,QAAA,gBAAgB,GAAG;IAC9B,yCAAmB,CAAC,aAAa,EAAE,CAAC;IACpC,6CAAqB,CAAC,UAAU,EAAE,CAAC;AACrC,CAAC,CAAC;AAEW,QAAA,eAAe,GAAG;IAC7B,6CAAqB,CAAC,aAAa,EAAE,CAAC;AACxC,CAAC,CAAC;AAEF,yBAAyB;AACZ,QAAA,qBAAqB,GAAG;IACnC,MAAM,CAAC,yCAAmB,CAAC,aAAa,CAAC,EAAE,CAAC;AAC9C,CAAC,CAAC;AAEW,QAAA,wBAAwB,GAAG,UACtC,GAAc,EACd,QAA6B;IAE5B,GAAG,CAAC,IAAI,CAAC,qBAA6B,CAAC,sBAAsB,GAAG,QAAQ,CAAC;AAC5E,CAAC,CAAC;AAEW,QAAA,KAAK,GAAG,UAAS,GAAc,EAAE,SAAmB;IAC/D,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAC5B,CAAC,CAAC;AAEW,QAAA,qBAAqB,GAAG,UAAS,GAAc,EAAE,MAAc;IAC1E,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AACzC,CAAC,CAAC;AAEW,QAAA,eAAe,GAAG,UAAS,GAAc;IACpD,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;AAClC,CAAC,CAAC;AAEW,QAAA,mBAAmB,GAAG,UACjC,GAAc,EACd,QAA8C;IAE9C,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;AACjD,CAAC,CAAC","file":"internal.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { Reference } from './Reference';\n\n/**\n * INTERNAL methods for internal-use only (tests, etc.).\n *\n * Customers shouldn't use these or else should be aware that they could break at any time.\n *\n * @const\n */\n\nexport const forceLongPolling = function() {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nexport const forceWebSockets = function() {\n  BrowserPollConnection.forceDisallow();\n};\n\n/* Used by App Manager */\nexport const isWebSocketsAvailable = function(): boolean {\n  return WebSocketConnection['isAvailable']();\n};\n\nexport const setSecurityDebugCallback = function(\n  ref: Reference,\n  callback: (a: Object) => void\n) {\n  (ref.repo.persistentConnection_ as any).securityDebugCallback_ = callback;\n};\n\nexport const stats = function(ref: Reference, showDelta?: boolean) {\n  ref.repo.stats(showDelta);\n};\n\nexport const statsIncrementCounter = function(ref: Reference, metric: string) {\n  ref.repo.statsIncrementCounter(metric);\n};\n\nexport const dataUpdateCount = function(ref: Reference): number {\n  return ref.repo.dataUpdateCount;\n};\n\nexport const interceptServerData = function(\n  ref: Reference,\n  callback: ((a: string, b: any) => void) | null\n) {\n  return ref.repo.interceptServerData_(callback);\n};\n"]}