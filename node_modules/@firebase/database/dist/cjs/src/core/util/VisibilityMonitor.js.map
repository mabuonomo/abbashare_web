{"version":3,"sources":["../src/core/util/VisibilityMonitor.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;AAEH,+CAA8C;AAC9C,uCAAwC;AAIxC;;GAEG;AACH;IAAuC,qCAAY;IAOjD;QAAA,YACE,kBAAM,CAAC,SAAS,CAAC,CAAC,SA0CnB;QAzCC,IAAI,MAAc,CAAC;QACnB,IAAI,gBAAwB,CAAC;QAC7B,EAAE,CAAC,CACD,OAAO,QAAQ,KAAK,WAAW;YAC/B,OAAO,QAAQ,CAAC,gBAAgB,KAAK,WACvC,CAAC,CAAC,CAAC;YACD,EAAE,CAAC,CAAC,OAAO,QAAQ,CAAC,QAAQ,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;gBAC9C,+CAA+C;gBAC/C,gBAAgB,GAAG,kBAAkB,CAAC;gBACtC,MAAM,GAAG,QAAQ,CAAC;YACpB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,QAAQ,CAAC,WAAW,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;gBACxD,gBAAgB,GAAG,qBAAqB,CAAC;gBACzC,MAAM,GAAG,WAAW,CAAC;YACvB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,QAAQ,CAAC,UAAU,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;gBACvD,gBAAgB,GAAG,oBAAoB,CAAC;gBACxC,MAAM,GAAG,UAAU,CAAC;YACtB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,QAAQ,CAAC,cAAc,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;gBAC3D,gBAAgB,GAAG,wBAAwB,CAAC;gBAC5C,MAAM,GAAG,cAAc,CAAC;YAC1B,CAAC;QACH,CAAC;QAED,4EAA4E;QAC5E,yEAAyE;QACzE,yEAAyE;QACzE,aAAa;QACb,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACrB,QAAQ,CAAC,gBAAgB,CACvB,gBAAgB,EAChB;gBACE,IAAM,OAAO,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAClC,EAAE,CAAC,CAAC,OAAO,KAAK,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAC9B,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;oBACxB,KAAI,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;gBACnC,CAAC;YACH,CAAC,EACD,KAAK,CACN,CAAC;QACJ,CAAC;;IACH,CAAC;IA/CM,6BAAW,GAAlB;QACE,MAAM,CAAC,IAAI,iBAAiB,EAAE,CAAC;IACjC,CAAC;IA+CD;;;OAGG;IACH,2CAAe,GAAf,UAAgB,SAAiB;QAC/B,aAAM,CAAC,SAAS,KAAK,SAAS,EAAE,sBAAsB,GAAG,SAAS,CAAC,CAAC;QACpE,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACzB,CAAC;IACH,wBAAC;AAAD,CA5DA,AA4DC,CA5DsC,2BAAY,GA4DlD;AA5DY,8CAAiB","file":"VisibilityMonitor.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from './EventEmitter';\nimport { assert } from '@firebase/util';\n\ndeclare const document: any;\n\n/**\n * @extends {EventEmitter}\n */\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  /**\n   * @param {!string} eventType\n   * @return {Array.<boolean>}\n   */\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n"]}