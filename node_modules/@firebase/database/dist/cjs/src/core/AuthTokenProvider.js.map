{"version":3,"sources":["../src/core/AuthTokenProvider.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAGH,oCAAwC;AAExC;;GAEG;AACH;IACE;;OAEG;IACH,2BAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAAG,CAAC;IAEzC;;;OAGG;IACH,oCAAQ,GAAR,UAAS,YAAqB;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,CACzD,IAAI;QACJ,SAAS;QACT,UAAS,KAAK;YACZ,oEAAoE;YACpE,oBAAoB;YACpB,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,4BAA4B,CAAC,CAAC,CAAC;gBACzD,UAAG,CAAC,gEAAgE,CAAC,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC/B,CAAC;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,kDAAsB,GAAtB,UAAuB,QAAwC;QAC7D,uEAAuE;QACvE,0EAA0E;QAC1E,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,sBAAsB,CAAC,CAAC,QAAQ,CAAC,CAAC;IAC1D,CAAC;IAED,qDAAyB,GAAzB,UAA0B,QAAwC;QAChE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,yBAAyB,CAAC,CAAC,QAAQ,CAAC,CAAC;IAC7D,CAAC;IAED,iDAAqB,GAArB;QACE,IAAI,YAAY,GACd,yDAAyD;YACzD,IAAI,CAAC,IAAI,CAAC,IAAI;YACd,yDAAyD;YACzD,yBAAyB,CAAC;QAC5B,EAAE,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACtC,YAAY;gBACV,kEAAkE;oBAClE,8EAA8E;oBAC9E,UAAU,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,gBAAgB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjD,YAAY;gBACV,sEAAsE;oBACtE,8EAA8E;oBAC9E,UAAU,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,YAAY;gBACV,kEAAkE;oBAClE,4DAA4D;oBAC5D,uCAAuC,CAAC;QAC5C,CAAC;QACD,WAAI,CAAC,YAAY,CAAC,CAAC;IACrB,CAAC;IACH,wBAAC;AAAD,CA7DA,AA6DC,IAAA;AA7DY,8CAAiB","file":"AuthTokenProvider.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseAuthTokenData } from '@firebase/app';\nimport { log, warn } from './util/util';\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class AuthTokenProvider {\n  /**\n   * @param {!FirebaseApp} app_\n   */\n  constructor(private app_: FirebaseApp) {}\n\n  /**\n   * @param {boolean} forceRefresh\n   * @return {!Promise<FirebaseAuthTokenData>}\n   */\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return this.app_['INTERNAL']['getToken'](forceRefresh).then(\n      null,\n      // .catch\n      function(error) {\n        // TODO: Need to figure out all the cases this is raised and whether\n        // this makes sense.\n        if (error && error.code === 'auth/token-not-initialized') {\n          log('Got auth/token-not-initialized error.  Treating as null token.');\n          return null;\n        } else {\n          return Promise.reject(error);\n        }\n      }\n    );\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void) {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    this.app_['INTERNAL']['addAuthTokenListener'](listener);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void) {\n    this.app_['INTERNAL']['removeAuthTokenListener'](listener);\n  }\n\n  notifyForInvalidToken() {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.app_.name +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.app_.options) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.app_.options) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n"]}