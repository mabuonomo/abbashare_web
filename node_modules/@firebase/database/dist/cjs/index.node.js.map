{"version":3,"sources":["../index.node.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,qCAAyE;AACzE,+CAA8C;AAC9C,yCAAwC;AACxC,iDAAgD;AAChD,6CAAqD;AACrD,sDAAqD;AACrD,6CAA+C;AAC/C,mDAAqD;AACrD,uCAA2C;AAC3C,6BAA2B;AAE3B;;;;;;GAMG;AACH,wBAA+B,GAAG,EAAE,GAAG;IACrC,MAAM,CAAC;QACL,QAAQ,EAAE,yBAAW,CAAC,WAAW,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC;QAC7D,SAAS,EAAE;YACT,SAAS,uBAAA;YACT,KAAK,eAAA;YACL,QAAQ,qBAAA;YACR,aAAa,sBAAA;YACb,QAAQ,UAAA;YACR,WAAW,EAAE,mBAAQ,CAAC,WAAW;YACjC,WAAW,aAAA;SACZ;KACF,CAAC;AACJ,CAAC;AAbD,wCAaC;AAED,0BAAiC,QAA2B;IAC1D,+DAA+D;IAC/D,IAAM,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC,eAAe,CACjD,UAAU,EACV,UAAC,GAAG,EAAE,MAAM,EAAE,GAAG,IAAK,OAAA,yBAAW,CAAC,WAAW,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,EAAnD,CAAmD;IACzE,yCAAyC;IACzC;QACE,SAAS,uBAAA;QACT,KAAK,eAAA;QACL,QAAQ,qBAAA;QACR,aAAa,sBAAA;QACb,QAAQ,UAAA;QACR,WAAW,EAAE,mBAAQ,CAAC,WAAW;QACjC,WAAW,aAAA;KACZ,EACD,IAAI,EACJ,IAAI,CACL,CAAC;IAEF,EAAE,CAAC,CAAC,gBAAS,EAAE,CAAC,CAAC,CAAC;QAChB,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,cAAc,gBAAA,EAAE,CAAC,CAAC;IACpE,CAAC;AACH,CAAC;AAtBD,4CAsBC;AAED,gBAAgB,CAAC,aAAQ,CAAC,CAAC","file":"index.node.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase, { FirebaseApp, FirebaseNamespace } from '@firebase/app';\nimport { Database } from './src/api/Database';\nimport { Query } from './src/api/Query';\nimport { Reference } from './src/api/Reference';\nimport { enableLogging } from './src/core/util/util';\nimport { RepoManager } from './src/core/RepoManager';\nimport * as INTERNAL from './src/api/internal';\nimport * as TEST_ACCESS from './src/api/test_access';\nimport { isNodeSdk } from '@firebase/util';\nimport './src/nodePatches';\n\n/**\n * A one off register function which returns a database based on the app and\n * passed database URL.\n * \n * @param app A valid FirebaseApp-like object\n * @param url A valid Firebase databaseURL \n */\nexport function initStandalone(app, url) {\n  return {\n    instance: RepoManager.getInstance().databaseFromApp(app, url),\n    namespace: {\n      Reference,\n      Query,\n      Database,\n      enableLogging,\n      INTERNAL,\n      ServerValue: Database.ServerValue,\n      TEST_ACCESS\n    }\n  };\n}\n\nexport function registerDatabase(instance: FirebaseNamespace) {\n  // Register the Database Service with the 'firebase' namespace.\n  const namespace = instance.INTERNAL.registerService(\n    'database',\n    (app, unused, url) => RepoManager.getInstance().databaseFromApp(app, url),\n    // firebase.database namespace properties\n    {\n      Reference,\n      Query,\n      Database,\n      enableLogging,\n      INTERNAL,\n      ServerValue: Database.ServerValue,\n      TEST_ACCESS\n    },\n    null,\n    true\n  );\n\n  if (isNodeSdk()) {\n    module.exports = Object.assign({}, namespace, { initStandalone });\n  }\n}\n\nregisterDatabase(firebase);\n"]}