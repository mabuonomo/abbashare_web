{"version":3,"sources":["../src/implementation/location.ts"],"names":[],"mappings":"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","file":"location.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\nimport * as errorsExports from './error';\nimport { errors } from './error';\n\n/**\n * @struct\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  fullServerUrl(): string {\n    let encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    let encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw errorsExports.invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string): Location {\n    let location = null;\n    let bucketDomain = '([A-Za-z0-9.\\\\-]+)';\n\n    function gsModify(loc: Location) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    let gsPath = '(/(.*))?$';\n    let path = '(/([^?#]*).*)?$';\n    let gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    let gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    let version = 'v[A-Za-z0-9_]+';\n    let httpRegex = new RegExp(\n      '^https?://firebasestorage\\\\.googleapis\\\\.com/' +\n        version +\n        '/b/' +\n        bucketDomain +\n        '/o' +\n        path,\n      'i'\n    );\n    let httpIndices = { bucket: 1, path: 3 };\n    let groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      { regex: httpRegex, indices: httpIndices, postModify: httpModify }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      let group = groups[i];\n      let captures = group.regex.exec(url);\n      if (captures) {\n        let bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw errorsExports.invalidUrl(url);\n    }\n    return location;\n  }\n}\n"]}