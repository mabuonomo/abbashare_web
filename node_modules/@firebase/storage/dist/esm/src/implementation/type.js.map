{"version":3,"sources":["../src/implementation/type.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAEH;;GAEG;AACH,MAAM,gBAAgB,CAAM;IAC1B,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC;AACnB,CAAC;AAED,MAAM,oBAAoB,CAAM;IAC9B,MAAM,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;AACtB,CAAC;AAED,MAAM,qBAAqB,CAAM;IAC/B,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,CAAC;AACjC,CAAC;AAED,MAAM,mBAAmB,CAAM;IAC7B,MAAM,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC;AAC/B,CAAC;AAED,MAAM,0BAA0B,CAAM;IACpC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC;AACnC,CAAC;AAED,MAAM,2BAA2B,CAAM;IACrC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC;AAED,MAAM,mBAAmB,CAAM;IAC7B,MAAM,CAAC,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,YAAY,MAAM,CAAC;AACtD,CAAC;AAED,MAAM,mBAAmB,CAAM;IAC7B,MAAM,CAAC,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,YAAY,MAAM,CAAC;AACtD,CAAC;AAED,MAAM,uBAAuB,CAAM;IACjC,MAAM,CAAC,mBAAmB,EAAE,IAAI,CAAC,YAAY,IAAI,CAAC;AACpD,CAAC;AAED,MAAM;IACJ,MAAM,CAAC,OAAO,IAAI,KAAK,WAAW,CAAC;AACrC,CAAC","file":"type.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @return False if the object is undefined or null, true otherwise.\n */\nexport function isDef(p: any): boolean {\n  return p != null;\n}\n\nexport function isJustDef(p: any): boolean {\n  return p !== void 0;\n}\n\nexport function isFunction(p: any): boolean {\n  return typeof p === 'function';\n}\n\nexport function isObject(p: any): boolean {\n  return typeof p === 'object';\n}\n\nexport function isNonNullObject(p: any): boolean {\n  return isObject(p) && p !== null;\n}\n\nexport function isNonArrayObject(p: any): boolean {\n  return isObject(p) && !Array.isArray(p);\n}\n\nexport function isString(p: any): boolean {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isNumber(p: any): boolean {\n  return typeof p === 'number' || p instanceof Number;\n}\n\nexport function isNativeBlob(p: any): boolean {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  return typeof Blob !== 'undefined';\n}\n"]}