{"version":3,"sources":["../src/implementation/url.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH;;GAEG;AACH,uCAAyC;AACzC,iCAAmC;AAEnC,uBAA8B,OAAe;IAC3C,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,CAAC,UAAU,GAAG,OAAO,CAAC;AAC/D,CAAC;AAFD,sCAEC;AAED,yBAAgC,OAAe;IAC7C,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,CAAC,UAAU,GAAG,OAAO,CAAC;AACjE,CAAC;AAFD,0CAEC;AAED,uBAA8B,OAAe;IAC3C,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,CAAC,gBAAgB,GAAG,OAAO,CAAC;AACrE,CAAC;AAFD,sCAEC;AAED,yBAAgC,MAAiC;IAC/D,IAAI,MAAM,GAAG,kBAAkB,CAAC;IAChC,IAAI,SAAS,GAAG,GAAG,CAAC;IACpB,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,UAAS,GAAG,EAAE,GAAG;QACtC,IAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QAC/C,SAAS,GAAG,SAAS,GAAG,QAAQ,GAAG,GAAG,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,2CAA2C;IAC3C,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnC,MAAM,CAAC,SAAS,CAAC;AACnB,CAAC;AAXD,0CAWC","file":"url.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport * as constants from './constants';\nimport * as object from './object';\n\nexport function makeNormalUrl(urlPart: string): string {\n  return constants.domainBase + constants.apiBaseUrl + urlPart;\n}\n\nexport function makeDownloadUrl(urlPart: string): string {\n  return constants.downloadBase + constants.apiBaseUrl + urlPart;\n}\n\nexport function makeUploadUrl(urlPart: string): string {\n  return constants.domainBase + constants.apiUploadBaseUrl + urlPart;\n}\n\nexport function makeQueryString(params: { [key: string]: string }): string {\n  let encode = encodeURIComponent;\n  let queryPart = '?';\n  object.forEach(params, function(key, val) {\n    let nextPart = encode(key) + '=' + encode(val);\n    queryPart = queryPart + nextPart + '&';\n  });\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n"]}