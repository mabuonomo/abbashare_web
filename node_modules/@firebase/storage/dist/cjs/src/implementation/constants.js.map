{"version":3,"sources":["../src/implementation/constants.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;AACH;;GAEG;;AAEH;;GAEG;AACU,QAAA,UAAU,GAAW,wCAAwC,CAAC;AAE3E;;GAEG;AACU,QAAA,YAAY,GAAW,wCAAwC,CAAC;AAE7E;;GAEG;AACU,QAAA,UAAU,GAAW,KAAK,CAAC;AAExC;;GAEG;AACU,QAAA,gBAAgB,GAAW,KAAK,CAAC;AAE9C,uBAA8B,UAAkB;IAC9C,UAAU,GAAG,UAAU,CAAC;AAC1B,CAAC;AAFD,sCAEC;AAEY,QAAA,YAAY,GAAW,eAAe,CAAC;AAEpD;;GAEG;AACU,QAAA,0BAA0B,GAAW,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;AAEhE;;GAEG;AACU,QAAA,4BAA4B,GAAW,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;AAElE;;GAEG;AACU,QAAA,yBAAyB,GAAW,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;AAE/D;;;GAGG;AACU,QAAA,cAAc,GAAW,CAAC,gBAAgB,CAAC","file":"constants.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain and scheme for API calls.\n */\nexport const domainBase: string = 'https://firebasestorage.googleapis.com';\n\n/**\n * Domain and scheme for object downloads.\n */\nexport const downloadBase: string = 'https://firebasestorage.googleapis.com';\n\n/**\n * Base URL for non-upload calls to the API.\n */\nexport const apiBaseUrl: string = '/v0';\n\n/**\n * Base URL for upload calls to the API.\n */\nexport const apiUploadBaseUrl: string = '/v0';\n\nexport function setDomainBase(domainBase: string) {\n  domainBase = domainBase;\n}\n\nexport const configOption: string = 'storageBucket';\n\n/**\n * 1 minute\n */\nexport const shortMaxOperationRetryTime: number = 1 * 60 * 1000;\n\n/**\n * 2 minutes\n */\nexport const defaultMaxOperationRetryTime: number = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n */\nexport const defaultMaxUploadRetryTime: number = 10 * 60 * 100;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const minSafeInteger: number = -9007199254740991;\n"]}