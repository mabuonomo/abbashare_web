{"version":3,"sources":["../src/implementation/failrequest.ts"],"names":[],"mappings":";;AAgBA,gDAAkD;AAIlD;;;;GAIG;AACH;IAGE,qBAAY,KAA2B;QACrC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,MAAM,CAAI,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,kBAAkB;IAClB,gCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,kBAAkB;IAClB,4BAAM,GAAN,UAAO,SAAiB;QAAjB,0BAAA,EAAA,iBAAiB;IAAG,CAAC;IAC9B,kBAAC;AAAD,CAdA,AAcC,IAAA;AAdY,kCAAW","file":"failrequest.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport * as promiseimpl from './promise_external';\nimport * as RequestExports from './request';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n * @struct\n * @template T\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: FirebaseStorageError) {\n    this.promise_ = promiseimpl.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise() {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete = false) {}\n}\n"]}