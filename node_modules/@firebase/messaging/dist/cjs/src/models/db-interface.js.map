{"version":3,"sources":["../src/models/db-interface.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AACH,YAAY,CAAC;;AAEb,uCAA8C;AAE9C,mCAA8B;AAE9B;IAOE;;;OAGG;IACH,qBAAY,MAAM,EAAE,SAAS;QAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,mBAAY,CAAC,WAAW,EAAE,WAAW,EAAE,gBAAM,CAAC,GAAG,CAAC,CAAC;QAC5E,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,sBAAsB,GAAG,WAAW,CAAC;IAC5C,CAAC;IAED;;;;OAIG;IACH,kCAAY,GAAZ;QAAA,iBAoBC;QAnBC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;QAED,IAAI,CAAC,cAAc,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAChD,IAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;YAC9D,OAAO,CAAC,OAAO,GAAG,UAAA,KAAK;gBACrB,MAAM,CAAc,KAAK,CAAC,MAAO,CAAC,KAAK,CAAC,CAAC;YAC3C,CAAC,CAAC;YACF,OAAO,CAAC,SAAS,GAAG,UAAA,KAAK;gBACvB,OAAO,CAAc,KAAK,CAAC,MAAO,CAAC,MAAM,CAAC,CAAC;YAC7C,CAAC,CAAC;YACF,OAAO,CAAC,eAAe,GAAG,UAAA,KAAK;gBAC7B,IAAI,EAAE,GAAgB,KAAK,CAAC,MAAO,CAAC,MAAM,CAAC;gBAC3C,KAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YACvB,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED;;;OAGG;IACH,mCAAa,GAAb;QAAA,iBASC;QARC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;YAC5B,EAAE,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBACxB,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAA,EAAE;oBAChC,EAAE,CAAC,KAAK,EAAE,CAAC;oBACX,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC7B,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,iCAAW,GAAX,UAAY,EAAE;QACZ,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,gBAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;IACpE,CAAC;IACH,kBAAC;AAAD,CApEA,AAoEC,IAAA","file":"db-interface.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nimport { ErrorFactory } from '@firebase/util';\n\nimport Errors from './errors';\n\nexport default class DBInterface {\n  private dbName_: string;\n  private dbVersion_: number;\n  private openDbPromise_: Promise<IDBDatabase>;\n  protected errorFactory_: ErrorFactory<string>;\n  protected TRANSACTION_READ_WRITE: IDBTransactionMode;\n\n  /**\n   * @param {string} dbName\n   * @param {number} dbVersion\n   */\n  constructor(dbName, dbVersion) {\n    this.errorFactory_ = new ErrorFactory('messaging', 'Messaging', Errors.map);\n    this.dbName_ = dbName;\n    this.dbVersion_ = dbVersion;\n    this.openDbPromise_ = null;\n    this.TRANSACTION_READ_WRITE = 'readwrite';\n  }\n\n  /**\n   * Get the indexedDB as a promsie.\n   * @protected\n   * @return {!Promise<!IDBDatabase>} The IndexedDB database\n   */\n  openDatabase() {\n    if (this.openDbPromise_) {\n      return this.openDbPromise_;\n    }\n\n    this.openDbPromise_ = new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.dbName_, this.dbVersion_);\n      request.onerror = event => {\n        reject((<IDBRequest>event.target).error);\n      };\n      request.onsuccess = event => {\n        resolve((<IDBRequest>event.target).result);\n      };\n      request.onupgradeneeded = event => {\n        var db = (<IDBRequest>event.target).result;\n        this.onDBUpgrade(db);\n      };\n    });\n\n    return this.openDbPromise_;\n  }\n\n  /**\n   * Close the currently open database.\n   * @return {!Promise} Returns the result of the promise chain.\n   */\n  closeDatabase() {\n    return Promise.resolve().then(() => {\n      if (this.openDbPromise_) {\n        return this.openDbPromise_.then(db => {\n          db.close();\n          this.openDbPromise_ = null;\n        });\n      }\n    });\n  }\n\n  /**\n   * @protected\n   * @param {!IDBDatabase} db\n   */\n  onDBUpgrade(db) {\n    throw this.errorFactory_.create(Errors.codes.SHOULD_BE_INHERITED);\n  }\n}\n"]}