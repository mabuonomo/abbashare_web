{"version":3,"sources":["../src/models/token-details-model.ts"],"names":[],"mappings":"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","file":"token-details-model.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nimport DBInterface from './db-interface';\nimport Errors from './errors';\nimport arrayBufferToBase64 from '../helpers/array-buffer-to-base64';\n\nconst FCM_TOKEN_OBJ_STORE = 'fcm_token_object_Store';\nconst DB_VERSION = 1;\n\n/** @record */\nfunction ValidateInput() {}\n/** @type {string|undefined} */\nValidateInput.prototype.fcmToken;\n/** @type {string|undefined} */\nValidateInput.prototype.swScope;\n/** @type {string|undefined} */\nValidateInput.prototype.vapidKey;\n/** @type {PushSubscription|undefined} */\nValidateInput.prototype.subscription;\n/** @type {string|undefined} */\nValidateInput.prototype.fcmSenderId;\n/** @type {string|undefined} */\nValidateInput.prototype.fcmPushSet;\n\nexport default class TokenDetailsModel extends DBInterface {\n  constructor() {\n    super(TokenDetailsModel.dbName, DB_VERSION);\n  }\n\n  static get dbName() {\n    return 'fcm_token_details_db';\n  }\n\n  /**\n   * @override\n   */\n  onDBUpgrade(db) {\n    var objectStore = db.createObjectStore(FCM_TOKEN_OBJ_STORE, {\n      keyPath: 'swScope'\n    });\n\n    // Make sure the sender ID can be searched\n    objectStore.createIndex('fcmSenderId', 'fcmSenderId', {\n      unique: false\n    });\n\n    objectStore.createIndex('fcmToken', 'fcmToken', {\n      unique: true\n    });\n  }\n\n  /**\n   * This method takes an object and will check for known arguments and\n   * validate the input.\n   * @private\n   * @param {!ValidateInput} input\n   * @return {!Promise} Returns promise that resolves if input is valid,\n   * rejects otherwise.\n   */\n  validateInputs_(input) {\n    if (input.fcmToken) {\n      if (typeof input.fcmToken !== 'string' || input.fcmToken.length === 0) {\n        return Promise.reject(\n          this.errorFactory_.create(Errors.codes.BAD_TOKEN)\n        );\n      }\n    }\n\n    if (input.swScope) {\n      if (typeof input.swScope !== 'string' || input.swScope.length === 0) {\n        return Promise.reject(\n          this.errorFactory_.create(Errors.codes.BAD_SCOPE)\n        );\n      }\n    }\n\n    if (input.vapidKey) {\n      if (typeof input.vapidKey !== 'string' || input.vapidKey.length === 0) {\n        return Promise.reject(\n          this.errorFactory_.create(Errors.codes.BAD_VAPID_KEY)\n        );\n      }\n    }\n\n    if (input.subscription) {\n      if (!(input.subscription instanceof PushSubscription)) {\n        return Promise.reject(\n          this.errorFactory_.create(Errors.codes.BAD_SUBSCRIPTION)\n        );\n      }\n    }\n\n    if (input.fcmSenderId) {\n      if (\n        typeof input.fcmSenderId !== 'string' ||\n        input.fcmSenderId.length === 0\n      ) {\n        return Promise.reject(\n          this.errorFactory_.create(Errors.codes.BAD_SENDER_ID)\n        );\n      }\n    }\n\n    if (input.fcmPushSet) {\n      if (\n        typeof input.fcmPushSet !== 'string' ||\n        input.fcmPushSet.length === 0\n      ) {\n        return Promise.reject(\n          this.errorFactory_.create(Errors.codes.BAD_PUSH_SET)\n        );\n      }\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Given a token, this method will look up the details in indexedDB.\n   * @param {string} fcmToken\n   * @return {Promise<Object>} The details associated with that token.\n   */\n  getTokenDetailsFromToken(fcmToken) {\n    if (!fcmToken) {\n      return Promise.reject(this.errorFactory_.create(Errors.codes.BAD_TOKEN));\n    }\n\n    return this.validateInputs_({ fcmToken })\n      .then(() => {\n        return this.openDatabase();\n      })\n      .then(db => {\n        return new Promise((resolve, reject) => {\n          const transaction = db.transaction([FCM_TOKEN_OBJ_STORE]);\n          const objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n          const index = objectStore.index('fcmToken');\n          const request = index.get(fcmToken);\n          request.onerror = function(event) {\n            reject((<IDBRequest>event.target).error);\n          };\n          request.onsuccess = function(event) {\n            const result = (<IDBRequest>event.target).result\n              ? (<IDBRequest>event.target).result\n              : null;\n            resolve(result);\n          };\n        });\n      });\n  }\n\n  /**\n   * Given a service worker scope, this method will look up the details in\n   * indexedDB.\n   * @public\n   * @param {string} swScope\n   * @return {Promise<Object>} The details associated with that token.\n   */\n  getTokenDetailsFromSWScope(swScope) {\n    if (!swScope) {\n      return Promise.reject(this.errorFactory_.create(Errors.codes.BAD_SCOPE));\n    }\n\n    return this.validateInputs_({ swScope })\n      .then(() => {\n        return this.openDatabase();\n      })\n      .then(db => {\n        return new Promise((resolve, reject) => {\n          const transaction = db.transaction([FCM_TOKEN_OBJ_STORE]);\n          const objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n          const scopeRequest = objectStore.get(swScope);\n          scopeRequest.onerror = event => {\n            reject((<IDBRequest>event.target).error);\n          };\n\n          scopeRequest.onsuccess = event => {\n            const result = (<IDBRequest>event.target).result\n              ? (<IDBRequest>event.target).result\n              : null;\n            resolve(result);\n          };\n        });\n      });\n  }\n\n  /**\n   * Save the details for the fcm token for re-use at a later date.\n   * @param {{swScope: !string, vapidKey: !string,\n   * subscription: !PushSubscription, fcmSenderId: !string, fcmToken: !string,\n   * fcmPushSet: !string}} input A plain js object containing args to save.\n   * @return {Promise<void>}\n   */\n  saveTokenDetails({\n    swScope,\n    vapidKey,\n    subscription,\n    fcmSenderId,\n    fcmToken,\n    fcmPushSet\n  }) {\n    if (!swScope) {\n      return Promise.reject(this.errorFactory_.create(Errors.codes.BAD_SCOPE));\n    }\n\n    if (!vapidKey) {\n      return Promise.reject(\n        this.errorFactory_.create(Errors.codes.BAD_VAPID_KEY)\n      );\n    }\n\n    if (!subscription) {\n      return Promise.reject(\n        this.errorFactory_.create(Errors.codes.BAD_SUBSCRIPTION)\n      );\n    }\n\n    if (!fcmSenderId) {\n      return Promise.reject(\n        this.errorFactory_.create(Errors.codes.BAD_SENDER_ID)\n      );\n    }\n\n    if (!fcmToken) {\n      return Promise.reject(this.errorFactory_.create(Errors.codes.BAD_TOKEN));\n    }\n\n    if (!fcmPushSet) {\n      return Promise.reject(\n        this.errorFactory_.create(Errors.codes.BAD_PUSH_SET)\n      );\n    }\n\n    return this.validateInputs_({\n      swScope,\n      vapidKey,\n      subscription,\n      fcmSenderId,\n      fcmToken,\n      fcmPushSet\n    })\n      .then(() => {\n        return this.openDatabase();\n      })\n      .then(db => {\n        /**\n       * @dict\n       */\n        const details = {\n          swScope: swScope,\n          vapidKey: vapidKey,\n          endpoint: subscription.endpoint,\n          auth: arrayBufferToBase64(subscription['getKey']('auth')),\n          p256dh: arrayBufferToBase64(subscription['getKey']('p256dh')),\n          fcmSenderId: fcmSenderId,\n          fcmToken: fcmToken,\n          fcmPushSet: fcmPushSet\n        };\n\n        return new Promise((resolve, reject) => {\n          const transaction = db.transaction(\n            [FCM_TOKEN_OBJ_STORE],\n            this.TRANSACTION_READ_WRITE\n          );\n          const objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n          const request = objectStore.put(details);\n          request.onerror = event => {\n            reject((<IDBRequest>event.target).error);\n          };\n          request.onsuccess = event => {\n            resolve();\n          };\n        });\n      });\n  }\n\n  /**\n   * This method deletes details of the current FCM token.\n   * It's returning a promise in case we need to move to an async\n   * method for deleting at a later date.\n   * @param {string} token Token to be deleted\n   * @return {Promise<Object>} Resolves once the FCM token details have been\n   * deleted and returns the deleted details.\n   */\n  deleteToken(token) {\n    if (typeof token !== 'string' || token.length === 0) {\n      return Promise.reject(\n        this.errorFactory_.create(Errors.codes.INVALID_DELETE_TOKEN)\n      );\n    }\n\n    return this.getTokenDetailsFromToken(token).then(details => {\n      if (!details) {\n        throw this.errorFactory_.create(Errors.codes.DELETE_TOKEN_NOT_FOUND);\n      }\n\n      return this.openDatabase().then(db => {\n        return new Promise((resolve, reject) => {\n          const transaction = db.transaction(\n            [FCM_TOKEN_OBJ_STORE],\n            this.TRANSACTION_READ_WRITE\n          );\n          const objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n          const request = objectStore.delete(details['swScope']);\n          request.onerror = event => {\n            reject((<IDBRequest>event.target).error);\n          };\n          request.onsuccess = event => {\n            if ((<IDBRequest>event.target).result === 0) {\n              reject(\n                this.errorFactory_.create(Errors.codes.FAILED_TO_DELETE_TOKEN)\n              );\n              return;\n            }\n\n            resolve(details);\n          };\n        });\n      });\n    });\n  }\n}\n"]}