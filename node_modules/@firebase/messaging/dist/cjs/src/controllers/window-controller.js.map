{"version":3,"sources":["../src/controllers/window-controller.ts"],"names":[],"mappings":"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","file":"window-controller.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nimport ControllerInterface from './controller-interface';\nimport Errors from '../models/errors';\nimport WorkerPageMessage from '../models/worker-page-message';\nimport DefaultSW from '../models/default-sw';\nimport NOTIFICATION_PERMISSION from '../models/notification-permission';\nimport { createSubscribe } from '@firebase/util';\n\ndeclare const firebase: any;\n\nexport default class WindowController extends ControllerInterface {\n  private registrationToUse_;\n  private manifestCheckPromise_;\n  private messageObserver_;\n  private onMessage_;\n  private tokenRefreshObserver_;\n  private onTokenRefresh_;\n\n  /**\n   * A service that provides a MessagingService instance.\n   * @param {!firebase.app.App} app\n   */\n  constructor(app) {\n    super(app);\n\n    /**\n     * @private\n     * @type {ServiceWorkerRegistration}\n     */\n    this.registrationToUse_;\n\n    /**\n     * @private\n     * @type {Promise}\n     */\n    this.manifestCheckPromise_;\n\n    /**\n     * @private\n     * @type {firebase.Observer}\n     */\n    this.messageObserver_ = null;\n    /**\n     * @private {!firebase.Subscribe} The subscribe function to the onMessage\n     * observer.\n     */\n    this.onMessage_ = createSubscribe(observer => {\n      this.messageObserver_ = observer;\n    });\n\n    /**\n     * @private\n     * @type {firebase.Observer}\n     */\n    this.tokenRefreshObserver_ = null;\n    this.onTokenRefresh_ = createSubscribe(observer => {\n      this.tokenRefreshObserver_ = observer;\n    });\n\n    this.setupSWMessageListener_();\n  }\n\n  /**\n   * This method returns an FCM token if it can be generated.\n   * The return promise will reject if the browser doesn't support\n   * FCM, if permission is denied for notifications or it's not\n   * possible to generate a token.\n   * @export\n   * @return {Promise<string> | Promise<null>} Returns a promise the\n   * resolves to an FCM token or null if permission isn't granted.\n   */\n  getToken() {\n    // Check that the required API's are available\n    if (!this.isSupported_()) {\n      return Promise.reject(\n        this.errorFactory_.create(Errors.codes.UNSUPPORTED_BROWSER)\n      );\n    }\n\n    return this.manifestCheck_().then(() => {\n      return super.getToken();\n    });\n  }\n\n  /**\n   * The method checks that a manifest is defined and has the correct GCM\n   * sender ID.\n   * @private\n   * @return {Promise} Returns a promise that resolves if the manifest matches\n   * our required sender ID\n   */\n  manifestCheck_() {\n    if (this.manifestCheckPromise_) {\n      return this.manifestCheckPromise_;\n    }\n\n    const manifestTag = <HTMLAnchorElement>document.querySelector(\n      'link[rel=\"manifest\"]'\n    );\n    if (!manifestTag) {\n      this.manifestCheckPromise_ = Promise.resolve();\n    } else {\n      this.manifestCheckPromise_ = fetch(manifestTag.href)\n        .then(response => {\n          return response.json();\n        })\n        .catch(() => {\n          // If the download or parsing fails allow check.\n          // We only want to error if we KNOW that the gcm_sender_id is incorrect.\n          return Promise.resolve();\n        })\n        .then(manifestContent => {\n          if (!manifestContent) {\n            return;\n          }\n\n          if (!manifestContent['gcm_sender_id']) {\n            return;\n          }\n\n          if (manifestContent['gcm_sender_id'] !== '103953800507') {\n            throw this.errorFactory_.create(\n              Errors.codes.INCORRECT_GCM_SENDER_ID\n            );\n          }\n        });\n    }\n\n    return this.manifestCheckPromise_;\n  }\n\n  /**\n   * Request permission if it is not currently granted\n   * @export\n   * @returns {Promise} Resolves if the permission was granted, otherwise\n   * rejects\n   */\n  requestPermission() {\n    if ((Notification as any).permission === NOTIFICATION_PERMISSION.granted) {\n      return Promise.resolve();\n    }\n\n    return new Promise((resolve, reject) => {\n      const managePermissionResult = result => {\n        if (result === NOTIFICATION_PERMISSION.granted) {\n          return resolve();\n        } else if (result === NOTIFICATION_PERMISSION.denied) {\n          return reject(\n            this.errorFactory_.create(Errors.codes.PERMISSION_BLOCKED)\n          );\n        } else {\n          return reject(\n            this.errorFactory_.create(Errors.codes.PERMISSION_DEFAULT)\n          );\n        }\n      };\n\n      // The Notification.requestPermission API was changed to\n      // return a promise so now have to handle both in case\n      // browsers stop support callbacks for promised version\n      const permissionPromise = Notification.requestPermission(result => {\n        if (permissionPromise) {\n          // Let the promise manage this\n          return;\n        }\n\n        managePermissionResult(result);\n      });\n\n      if (permissionPromise) {\n        // Prefer the promise version as it's the future API.\n        permissionPromise.then(managePermissionResult);\n      }\n    });\n  }\n\n  /**\n   * This method allows a developer to override the default service worker and\n   * instead use a custom service worker.\n   * @export\n   * @param {!ServiceWorkerRegistration} registration The service worker\n   * registration that should be used to receive the push messages.\n   */\n  useServiceWorker(registration) {\n    if (!(registration instanceof ServiceWorkerRegistration)) {\n      throw this.errorFactory_.create(Errors.codes.SW_REGISTRATION_EXPECTED);\n    }\n\n    if (typeof this.registrationToUse_ !== 'undefined') {\n      throw this.errorFactory_.create(Errors.codes.USE_SW_BEFORE_GET_TOKEN);\n    }\n\n    this.registrationToUse_ = registration;\n  }\n\n  /**\n   * @export\n   * @param {!firebase.Observer|function(*)} nextOrObserver An observer object\n   * or a function triggered on message.\n   * @param {function(!Error)=} optError Optional A function triggered on\n   * message error.\n   * @param {function()=} optCompleted Optional function triggered when the\n   * observer is removed.\n   * @return {!function()} The unsubscribe function for the observer.\n   */\n  onMessage(nextOrObserver, optError, optCompleted) {\n    return this.onMessage_(nextOrObserver, optError, optCompleted);\n  }\n\n  /**\n   * @export\n   * @param {!firebase.Observer|function()} nextOrObserver An observer object\n   * or a function triggered on token refresh.\n   * @param {function(!Error)=} optError Optional A function\n   * triggered on token refresh error.\n   * @param {function()=} optCompleted Optional function triggered when the\n   * observer is removed.\n   * @return {!function()} The unsubscribe function for the observer.\n   */\n  onTokenRefresh(nextOrObserver, optError, optCompleted) {\n    return this.onTokenRefresh_(nextOrObserver, optError, optCompleted);\n  }\n\n  /**\n   * Given a registration, wait for the service worker it relates to\n   * become activer\n   * @private\n   * @param  {ServiceWorkerRegistration} registration Registration to wait\n   * for service worker to become active\n   * @return {Promise<!ServiceWorkerRegistration>} Wait for service worker\n   * registration to become active\n   */\n  waitForRegistrationToActivate_(registration) {\n    const serviceWorker =\n      registration.installing || registration.waiting || registration.active;\n\n    return new Promise<ServiceWorkerRegistration>((resolve, reject) => {\n      if (!serviceWorker) {\n        // This is a rare scenario but has occured in firefox\n        reject(this.errorFactory_.create(Errors.codes.NO_SW_IN_REG));\n        return;\n      }\n      // Because the Promise function is called on next tick there is a\n      // small chance that the worker became active or redundant already.\n      if (serviceWorker.state === 'activated') {\n        resolve(registration);\n        return;\n      }\n\n      if (serviceWorker.state === 'redundant') {\n        reject(this.errorFactory_.create(Errors.codes.SW_REG_REDUNDANT));\n        return;\n      }\n\n      let stateChangeListener = () => {\n        if (serviceWorker.state === 'activated') {\n          resolve(registration);\n        } else if (serviceWorker.state === 'redundant') {\n          reject(this.errorFactory_.create(Errors.codes.SW_REG_REDUNDANT));\n        } else {\n          // Return early and wait to next state change\n          return;\n        }\n        serviceWorker.removeEventListener('statechange', stateChangeListener);\n      };\n      serviceWorker.addEventListener('statechange', stateChangeListener);\n    });\n  }\n\n  /**\n   * This will regiater the default service worker and return the registration\n   * @private\n   * @return {Promise<!ServiceWorkerRegistration>} The service worker\n   * registration to be used for the push service.\n   */\n  getSWRegistration_() {\n    if (this.registrationToUse_) {\n      return this.waitForRegistrationToActivate_(this.registrationToUse_);\n    }\n\n    // Make the registration null so we know useServiceWorker will not\n    // use a new service worker as registrationToUse_ is no longer undefined\n    this.registrationToUse_ = null;\n\n    return navigator.serviceWorker\n      .register(DefaultSW.path, {\n        scope: DefaultSW.scope\n      })\n      .catch(err => {\n        throw this.errorFactory_.create(\n          Errors.codes.FAILED_DEFAULT_REGISTRATION,\n          {\n            browserErrorMessage: err.message\n          }\n        );\n      })\n      .then(registration => {\n        return this.waitForRegistrationToActivate_(registration).then(() => {\n          this.registrationToUse_ = registration;\n\n          // We update after activation due to an issue with Firefox v49 where\n          // a race condition occassionally causes the service work to not\n          // install\n          registration.update();\n\n          return registration;\n        });\n      });\n  }\n\n  /**\n   * This method will set up a message listener to handle\n   * events from the service worker that should trigger\n   * events in the page.\n   *\n   * @private\n   */\n  setupSWMessageListener_() {\n    if (!('serviceWorker' in navigator)) {\n      return;\n    }\n\n    navigator.serviceWorker.addEventListener(\n      'message',\n      event => {\n        if (!event.data || !event.data[WorkerPageMessage.PARAMS.TYPE_OF_MSG]) {\n          // Not a message from FCM\n          return;\n        }\n\n        const workerPageMessage = event.data;\n        switch (workerPageMessage[WorkerPageMessage.PARAMS.TYPE_OF_MSG]) {\n          case WorkerPageMessage.TYPES_OF_MSG.PUSH_MSG_RECEIVED:\n          case WorkerPageMessage.TYPES_OF_MSG.NOTIFICATION_CLICKED:\n            const pushMessage =\n              workerPageMessage[WorkerPageMessage.PARAMS.DATA];\n            this.messageObserver_.next(pushMessage);\n            break;\n          default:\n            // Noop.\n            break;\n        }\n      },\n      false\n    );\n  }\n\n  /**\n   * Checks to see if the required API's are valid or not.\n   * @private\n   * @return {boolean} Returns true if the desired APIs are available.\n   */\n  isSupported_() {\n    return (\n      'serviceWorker' in navigator &&\n      'PushManager' in window &&\n      'Notification' in window &&\n      'fetch' in window &&\n      ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n      PushSubscription.prototype.hasOwnProperty('getKey')\n    );\n  }\n}\n"]}