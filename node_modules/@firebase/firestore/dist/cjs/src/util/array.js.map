{"version":3,"sources":["../src/util/array.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH;;GAEG;AACH,kBAA4B,KAAU,EAAE,KAAQ;IAC9C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACtC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;IACtC,CAAC;IACD,MAAM,CAAC,KAAK,CAAC;AACf,CAAC;AALD,4BAKC;AAED;;GAEG;AACH,cAAwB,KAAU,EAAE,SAA4B;IAC9D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACtC,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;IACvC,CAAC;IACD,MAAM,CAAC,KAAK,CAAC;AACf,CAAC;AALD,oBAKC;AAED;;;GAGG;AACH,qBACE,KAAU,EACV,IAAc,EACd,EAAsB,EACtB,OAAY;IAEZ,KAAK,CAAC,OAAO,CAAC,UAAA,KAAK;QACjB,EAAE,CAAC,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAC;YAC1B,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAC1B,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAXD,kCAWC;AAED;;;;GAIG;AACH,mBACE,KAAU,EACV,SAAgC;IAEhC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACtC,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,CAAC,CAAC;QACX,CAAC;IACH,CAAC;IACD,MAAM,CAAC,IAAI,CAAC;AACd,CAAC;AAVD,8BAUC","file":"array.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns true iff the array contains the value using strong equality.\n */\nexport function includes<T>(array: T[], value: T): boolean {\n  for (let i = 0; i < array.length; i++) {\n    if (array[i] === value) return true;\n  }\n  return false;\n}\n\n/**\n * Returns true iff the array contains any value mathching the predicate\n */\nexport function some<T>(array: T[], predicate: (t: T) => boolean): boolean {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i])) return true;\n  }\n  return false;\n}\n\n/**\n * Calls a fn for each element in an array that is an instance of a provided\n * class/function.\n */\nexport function forEachType<A, B>(\n  array: A[],\n  type: Function,\n  fn: (value: B) => void,\n  thisArg?: {}\n): void {\n  array.forEach(value => {\n    if (value instanceof type) {\n      fn.call(thisArg, value);\n    }\n  });\n}\n\n/**\n * Calls predicate function for each item in the array until the predicate\n * returns true, at which point the index of that item is returned.  If the\n * predicate does not return true for any item, null is returned.\n */\nexport function findIndex<A>(\n  array: A[],\n  predicate: (value: A) => boolean\n): number | null {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i])) {\n      return i;\n    }\n  }\n  return null;\n}\n"]}