{"version":3,"sources":["../src/util/types.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAIH,yEAAyE;AACzE,gDAAgD;AAChD,IAAM,WAAW,GAAG,MAAa,CAAC;AAElC;;;GAGG;AACQ,QAAA,gBAAgB,GACzB,WAAW,CAAC,gBAAgB,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAEzD;;;GAGG;AACQ,QAAA,gBAAgB,GACzB,WAAW,CAAC,gBAAgB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;AAEtD;;;;;GAKG;AACQ,QAAA,SAAS,GAClB,WAAW,CAAC,SAAS;IACrB,CAAC,UAAA,KAAK;QACJ,OAAA,OAAO,KAAK,KAAK,QAAQ;YACzB,QAAQ,CAAC,KAAK,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,KAAK;IAF3B,CAE2B,CAAC,CAAC;AAEjC;;GAEG;AACH,2BAAkC,KAAY;IAC5C,MAAM,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC;AAC/C,CAAC;AAFD,8CAEC;AAED;;;GAGG;AACH,uBAA8B,KAAY;IACxC,MAAM,CAAC,CACL,iBAAS,CAAC,KAAK,CAAC;QACf,KAAgB,IAAI,wBAAgB;QACpC,KAAgB,IAAI,wBAAgB,CACtC,CAAC;AACJ,CAAC;AAND,sCAMC;AAED;;GAEG;AACH,mBAA0B,KAAY;IACpC,EAAE,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;QACtB,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;AACH,CAAC;AAND,8BAMC","file":"types.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnyJs } from './misc';\n\n// Untyped Number alias we can use to check for ES6 methods / properties.\n// tslint:disable-next-line:no-any variable-name\nconst NumberAsAny = Number as any;\n\n/**\n * Minimum safe integer in Javascript because of floating point precision.\n * Added to not rely on ES6 features.\n */\nexport let MIN_SAFE_INTEGER: number =\n  NumberAsAny.MIN_SAFE_INTEGER || -(Math.pow(2, 53) - 1);\n\n/**\n * Maximum safe integer in Javascript because of floating point precision.\n * Added to not rely on ES6 features.\n */\nexport let MAX_SAFE_INTEGER: number =\n  NumberAsAny.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\n\n/**\n * Returns whether an number is an integer, uses native implementation if\n * available.\n * Added to not rely on ES6 features.\n * @param value The value to test for being an integer\n */\nexport let isInteger: (value: AnyJs) => boolean =\n  NumberAsAny.isInteger ||\n  (value =>\n    typeof value === 'number' &&\n    isFinite(value) &&\n    Math.floor(value) === value);\n\n/**\n * Returns whether a variable is either undefined or null.\n */\nexport function isNullOrUndefined(value: AnyJs): boolean {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value The value to test for being an integer and in the safe range\n */\nexport function isSafeInteger(value: AnyJs): boolean {\n  return (\n    isInteger(value) &&\n    (value as number) <= MAX_SAFE_INTEGER &&\n    (value as number) >= MIN_SAFE_INTEGER\n  );\n}\n\n/**\n * Safely checks if the number is NaN.\n */\nexport function safeIsNaN(value: AnyJs): boolean {\n  if (NumberAsAny.IsNaN) {\n    return NumberAsAny.IsNaN(value);\n  } else {\n    return typeof value === 'number' && isNaN(value);\n  }\n}\n"]}