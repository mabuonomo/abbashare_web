{"version":3,"sources":["../src/util/api.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,0EAA0E;AAC1E,2BAA2B;AAE3B,iCAA+C;AAE/C;;;;;;;;;;GAUG;AACH,gCAA0C,GAAM,EAAE,eAAwB;IACxE;QACE,IAAI,KAAK,GAAG,8BAA8B,CAAC;QAC3C,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;YACpB,KAAK,IAAI,GAAG,CAAC;YACb,KAAK,IAAI,eAAe,CAAC;QAC3B,CAAC;QACD,MAAM,IAAI,sBAAc,CAAC,YAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;IACzD,CAAC;IAED,6EAA6E;IAC7E,cAAc;IACd,iBAAiB,CAAC,SAAS,GAAI,GAAW,CAAC,SAAS,CAAC;IAErD,kCAAkC;IAClC,GAAG,CAAC,CAAC,IAAM,cAAc,IAAI,GAAG,CAAC,CAAC,CAAC;QACjC,EAAE,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YACtC,iBAAyB,CAAC,cAAc,CAAC,GAAI,GAAW,CAAC,cAAc,CAAC,CAAC;QAC5E,CAAC;IACH,CAAC;IAED,MAAM,CAAC,iBAAwB,CAAC;AAClC,CAAC;AAtBD,wDAsBC","file":"api.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// We are doing some heavy reflective stuff, lots of any casting necessary\n/* tslint:disable:no-any */\n\nimport { Code, FirestoreError } from './error';\n\n/**\n * Helper function to prevent instantiation through the constructor.\n *\n * This method creates a new constructor that throws when it's invoked.\n * The prototype of that constructor is then set to the prototype of the hidden\n * \"class\" to expose all the prototype methods and allow for instanceof\n * checks.\n *\n * To also make all the static methods available, all properties of the\n * original constructor are copied to the new constructor.\n */\nexport function makeConstructorPrivate<T>(cls: T, optionalMessage?: string): T {\n  function PublicConstructor() {\n    let error = 'This constructor is private.';\n    if (optionalMessage) {\n      error += ' ';\n      error += optionalMessage;\n    }\n    throw new FirestoreError(Code.INVALID_ARGUMENT, error);\n  }\n\n  // Make sure instanceof checks work and all methods are exposed on the public\n  // constructor\n  PublicConstructor.prototype = (cls as any).prototype;\n\n  // Copy any static methods/members\n  for (const staticProperty in cls) {\n    if (cls.hasOwnProperty(staticProperty)) {\n      (PublicConstructor as any)[staticProperty] = (cls as any)[staticProperty];\n    }\n  }\n\n  return PublicConstructor as any;\n}\n"]}