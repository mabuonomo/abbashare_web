{"version":3,"sources":["../src/platform_node/load_protos.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,IAAM,cAAc,GAAG,OAAO,CAAC;AAC/B,IAAM,UAAU,GAAG,cAAc,CAAC,YAAY,CAAC,CAAC;AAGhD,6CAA6D;AAE7D;IACE,MAAM,CAAC,sBAAW,CAAC,UAAC,QAA4C;QAC9D,UAAU,CAAC,QAAQ,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;AACL,CAAC;AAJD,0CAIC;AAED;;;;;;;;GAQG;AACH,oBACE,QAA6C;IAE7C,IAAM,OAAO,GAAG,UAAU,CAAC,UAAU,CAAC;QACpC,uEAAuE;QACvE,gCAAgC;QAChC,wBAAwB,EAAE,IAAI;KAC/B,CAAC,CAAC;IACH,IAAM,IAAI,GAAG,SAAS,GAAG,YAAY,CAAC;IACtC,IAAM,kBAAkB,GAAG;QACzB,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,0CAA0C;KACjD,CAAC;IACF,EAAE,CAAC,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC;QAC3B,mBAAmB;QACnB,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,kBAAkB,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IAC1E,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,iCAAiC;QACjC,UAAU,CAAC,aAAa,CAAC,kBAAkB,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;QAChE,0EAA0E;QAC1E,mBAAmB;QACnB,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;AACH,CAAC;AAvBD,gCAuBC","file":"load_protos.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst dynamicRequire = require;\nconst protobufjs = dynamicRequire('protobufjs');\nexport type ProtobufProtoBuilder = any;\n\nimport { NodeCallback, nodePromise } from '../util/node_api';\n\nexport function loadProtosAsync(): Promise<ProtobufProtoBuilder> {\n  return nodePromise((callback: NodeCallback<ProtobufProtoBuilder>) => {\n    loadProtos(callback);\n  });\n}\n\n/**\n * Loads the protocol buffer definitions for the datastore. This is a thin\n * wrapper around protobufjs.loadProtoFile which knows the location of the\n * proto files.\n *\n * @param callback if specified, the load is performed asynchronously and\n *     the protos are supplied to the callback.\n * @returns the ProtoBuilder if the callback is unspecified.\n */\nexport function loadProtos(\n  callback?: NodeCallback<ProtobufProtoBuilder>\n): ProtobufProtoBuilder | undefined {\n  const builder = protobufjs.newBuilder({\n    // Beware that converting fields to camel case does not convert the tag\n    // fields in oneof groups (!!!).\n    convertFieldsToCamelCase: true\n  });\n  const root = __dirname + '/../protos';\n  const firestoreProtoFile = {\n    root: root,\n    file: 'google/firestore/v1beta1/firestore.proto'\n  };\n  if (callback === undefined) {\n    // Synchronous load\n    return protobufjs.loadProtoFile(firestoreProtoFile, undefined, builder);\n  } else {\n    // Load the protos asynchronously\n    protobufjs.loadProtoFile(firestoreProtoFile, callback, builder);\n    // We are using the callback so no return value, but we need to explicitly\n    // return undefined\n    return undefined;\n  }\n}\n"]}