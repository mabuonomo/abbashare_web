{"version":3,"sources":["../src/remote/stream_bridge.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,yCAAwC;AAMxC;;;;GAIG;AACH;IAQE,sBAAY,IAAuD;QAP3D,kBAAa,GAAe,IAAW,CAAC;QACxC,mBAAc,GAAmC,IAAW,CAAC;QAC7D,qBAAgB,GAAqB,IAAW,CAAC;QAMvD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAC9B,CAAC;IAED,6BAAM,GAAN,UAAO,QAAoB;QACzB,eAAM,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,gCAAgC,CAAC,CAAC;QAC9D,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;IAChC,CAAC;IAED,8BAAO,GAAP,UAAQ,QAAwC;QAC9C,eAAM,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,iCAAiC,CAAC,CAAC;QAChE,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;IACjC,CAAC;IAED,gCAAS,GAAT,UAAU,QAA0B;QAClC,eAAM,CAAC,CAAC,IAAI,CAAC,gBAAgB,EAAE,mCAAmC,CAAC,CAAC;QACpE,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;IACnC,CAAC;IAED,4BAAK,GAAL;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,2BAAI,GAAJ,UAAK,GAAM;QACT,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IAED,iCAAU,GAAV;QACE,eAAM,CACJ,IAAI,CAAC,aAAa,KAAK,IAAI,EAC3B,yCAAyC,GAAG,SAAS,CACtD,CAAC;QACF,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,kCAAW,GAAX,UAAY,GAAoB;QAC9B,eAAM,CACJ,IAAI,CAAC,cAAc,KAAK,IAAI,EAC5B,iCAAiC,GAAG,kBAAkB,CACvD,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IAED,oCAAa,GAAb,UAAc,GAAM;QAClB,eAAM,CACJ,IAAI,CAAC,gBAAgB,KAAK,IAAI,EAC9B,mCAAmC,GAAG,kBAAkB,CACzD,CAAC;QACF,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IACH,mBAAC;AAAD,CA3DA,AA2DC,IAAA;AA3DY,oCAAY","file":"stream_bridge.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../util/assert';\nimport { FirestoreError } from '../util/error';\nimport { AnyJs } from '../util/misc';\n\nimport { Stream } from './connection';\n\n/**\n * Provides a simple helper class that implements the Stream interface to\n * bridge to other implementations that are streams but do not implement the\n * interface. The stream callbacks are invoked with the callOn... methods.\n */\nexport class StreamBridge<I, O> implements Stream<I, O> {\n  private wrappedOnOpen: () => void = null as any;\n  private wrappedOnClose: (err?: FirestoreError) => void = null as any;\n  private wrappedOnMessage: (msg: O) => void = null as any;\n\n  private sendFn: (msg: I) => void;\n  private closeFn: () => void;\n\n  constructor(args: { sendFn: (msg: I) => void; closeFn: () => void }) {\n    this.sendFn = args.sendFn;\n    this.closeFn = args.closeFn;\n  }\n\n  onOpen(callback: () => void): void {\n    assert(!this.wrappedOnOpen, 'Called onOpen on stream twice!');\n    this.wrappedOnOpen = callback;\n  }\n\n  onClose(callback: (err?: FirestoreError) => void): void {\n    assert(!this.wrappedOnClose, 'Called onClose on stream twice!');\n    this.wrappedOnClose = callback;\n  }\n\n  onMessage(callback: (msg: O) => void): void {\n    assert(!this.wrappedOnMessage, 'Called onMessage on stream twice!');\n    this.wrappedOnMessage = callback;\n  }\n\n  close(): void {\n    this.closeFn();\n  }\n\n  send(msg: I): void {\n    this.sendFn(msg);\n  }\n\n  callOnOpen(): void {\n    assert(\n      this.wrappedOnOpen !== null,\n      'Cannot call onOpen because no callback ' + 'was set'\n    );\n    this.wrappedOnOpen();\n  }\n\n  callOnClose(err?: FirestoreError): void {\n    assert(\n      this.wrappedOnClose !== null,\n      'Cannot call onClose because no ' + 'callback was set'\n    );\n    this.wrappedOnClose(err);\n  }\n\n  callOnMessage(msg: O): void {\n    assert(\n      this.wrappedOnMessage !== null,\n      'Cannot call onMessage because no ' + 'callback was set'\n    );\n    this.wrappedOnMessage(msg);\n  }\n}\n"]}