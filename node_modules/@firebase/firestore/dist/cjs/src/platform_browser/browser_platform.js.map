{"version":3,"sources":["../src/platform_browser/browser_platform.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAKH,mDAA2D;AAE3D,iEAA+D;AAE/D;IAKE;QAFS,oBAAe,GAAG,EAAE,CAAC;QAG5B,IAAI,CAAC,eAAe,GAAG,OAAO,IAAI,KAAK,WAAW,CAAC;IACrD,CAAC;IAED,wCAAc,GAAd,UAAe,YAA0B;QACvC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,4CAAoB,CAAC,YAAY,CAAC,CAAC,CAAC;IACjE,CAAC;IAED,uCAAa,GAAb,UAAc,UAAsB;QAClC,MAAM,CAAC,IAAI,gCAAmB,CAAC,UAAU,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;IACtE,CAAC;IAED,8BAAI,GAAJ,UAAK,OAAe;QAClB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACvB,CAAC;IAED,8BAAI,GAAJ,UAAK,GAAW;QACd,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IACH,sBAAC;AAAD,CAxBA,AAwBC,IAAA;AAxBY,0CAAe","file":"browser_platform.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatabaseId, DatabaseInfo } from '../core/database_info';\nimport { Platform } from '../platform/platform';\nimport { Connection } from '../remote/connection';\nimport { JsonProtoSerializer } from '../remote/serializer';\n\nimport { WebChannelConnection } from './webchannel_connection';\n\nexport class BrowserPlatform implements Platform {\n  readonly base64Available: boolean;\n\n  readonly emptyByteString = '';\n\n  constructor() {\n    this.base64Available = typeof atob !== 'undefined';\n  }\n\n  loadConnection(databaseInfo: DatabaseInfo): Promise<Connection> {\n    return Promise.resolve(new WebChannelConnection(databaseInfo));\n  }\n\n  newSerializer(databaseId: DatabaseId): JsonProtoSerializer {\n    return new JsonProtoSerializer(databaseId, { useProto3Json: true });\n  }\n\n  atob(encoded: string): string {\n    return atob(encoded);\n  }\n\n  btoa(raw: string): string {\n    return btoa(raw);\n  }\n}\n"]}