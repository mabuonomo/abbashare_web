{"version":3,"sources":["../src/auth/user.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH;;;GAGG;AACH;IASE,cAAqB,GAAkB;QAAlB,QAAG,GAAH,GAAG,CAAe;IAAG,CAAC;IAE3C,gCAAiB,GAAjB;QACE,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC;IAC1B,CAAC;IAED;;;OAGG;IACH,oBAAK,GAAL;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,gBAAgB,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;QAC3B,CAAC;IACH,CAAC;IAED,qBAAM,GAAN,UAAO,SAAe;QACpB,MAAM,CAAC,SAAS,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC;IACpC,CAAC;IA5BD,8BAA8B;IACd,oBAAe,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;IAEjD,iEAAiE;IACjE,8BAA8B;IACd,uBAAkB,GAAG,IAAI,IAAI,CAAC,wBAAwB,CAAC,CAAC;IACxD,gBAAW,GAAG,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAuB5D,WAAC;CA9BD,AA8BC,IAAA;AA9BY,oBAAI","file":"user.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nexport class User {\n  /** A user with a null UID. */\n  static readonly UNAUTHENTICATED = new User(null);\n\n  // TODO(mikelehen): Look into getting a proper uid-equivalent for\n  // non-FirebaseAuth providers.\n  static readonly GOOGLE_CREDENTIALS = new User('google-credentials-uid');\n  static readonly FIRST_PARTY = new User('first-party-uid');\n\n  constructor(readonly uid: string | null) {}\n\n  isUnauthenticated(): boolean {\n    return this.uid == null;\n  }\n\n  /**\n   * Returns a key representing this user, suitable for inclusion in a\n   * dictionary.\n   */\n  toKey(): string {\n    if (this.isUnauthenticated()) {\n      return 'anonymous-user';\n    } else {\n      return 'uid:' + this.uid;\n    }\n  }\n\n  equals(otherUser: User): boolean {\n    return otherUser.uid === this.uid;\n  }\n}\n"]}