{"version":3,"sources":["../src/api/database.ts"],"names":[],"mappings":"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","file":"database.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as firestore from 'firestore';\n\nimport { FirebaseApp, FirebaseService } from '@firebase/app';\nimport { FieldPath as ExternalFieldPath } from './field_path';\nimport { DatabaseId, DatabaseInfo } from '../core/database_info';\nimport { ListenOptions } from '../core/event_manager';\nimport { FirestoreClient } from '../core/firestore_client';\nimport {\n  Bound,\n  Direction,\n  fieldFilter,\n  Filter,\n  OrderBy,\n  Query as InternalQuery,\n  RelationFilter,\n  RelationOp\n} from '../core/query';\nimport { Transaction as InternalTransaction } from '../core/transaction';\nimport { ChangeType, ViewSnapshot } from '../core/view_snapshot';\nimport { Document, MaybeDocument, NoDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport {\n  ArrayValue,\n  FieldValue,\n  ObjectValue,\n  RefValue\n} from '../model/field_value';\nimport { DeleteMutation, Mutation, Precondition } from '../model/mutation';\nimport { FieldPath, ResourcePath } from '../model/path';\nimport { PlatformSupport } from '../platform/platform';\nimport { makeConstructorPrivate } from '../util/api';\nimport { assert, fail } from '../util/assert';\nimport { AsyncObserver } from '../util/async_observer';\nimport { AsyncQueue } from '../util/async_queue';\nimport { Code, FirestoreError } from '../util/error';\nimport {\n  invalidClassError,\n  validateArgType,\n  validateAtLeastNumberOfArgs,\n  validateBetweenNumberOfArgs,\n  validateDefined,\n  validateExactNumberOfArgs,\n  validateNamedOptionalType,\n  validateNamedType,\n  validateOptionalArgType,\n  validateOptionNames,\n  valueDescription\n} from '../util/input_validation';\nimport * as log from '../util/log';\nimport { LogLevel } from '../util/log';\nimport { AnyJs, AutoId } from '../util/misc';\nimport * as objUtils from '../util/obj';\nimport { Rejecter, Resolver } from '../util/promise';\n\nimport {\n  CredentialsProvider,\n  CredentialsSettings,\n  EmptyCredentialsProvider,\n  FirebaseCredentialsProvider,\n  makeCredentialsProvider\n} from './credentials';\nimport {\n  CompleteFn,\n  ErrorFn,\n  isPartialObserver,\n  NextFn,\n  PartialObserver,\n  Unsubscribe\n} from './observer';\nimport {\n  DocumentKeyReference,\n  fieldPathFromArgument,\n  UserDataConverter\n} from './user_data_converter';\n\n// The objects that are a part of this API are exposed to third-parties as\n// compiled javascript so we want to flag our private members with a leading\n// underscore to discourage their use.\n// tslint:disable:strip-private-property-underscore\n\nconst DEFAULT_HOST = 'firestore.googleapis.com';\nconst DEFAULT_SSL = true;\n\n/** Undocumented, private additional settings not exposed in our public API. */\ninterface PrivateSettings extends firestore.Settings {\n  // Can be a google-auth-library or gapi client.\n  credentials?: CredentialsSettings;\n}\n\n/**\n * Options that can be provided in the Firestore constructor when not using\n * Firebase (aka standalone mode).\n */\nexport interface FirestoreDatabase {\n  projectId: string;\n  database?: string;\n}\n\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied firestore.Settings object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass FirestoreSettings {\n  /** The hostname to connect to. */\n  host: string;\n\n  /** Whether to use SSL when connecting. */\n  ssl: boolean;\n\n  // Can be a google-auth-library or gapi client.\n  // tslint:disable-next-line:no-any\n  credentials?: any;\n\n  constructor(settings: PrivateSettings) {\n    if (settings.host === undefined) {\n      if (settings.ssl !== undefined) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          \"Can't provide ssl option if host option is not set\"\n        );\n      }\n      this.host = DEFAULT_HOST;\n      this.ssl = DEFAULT_SSL;\n    } else {\n      validateNamedType('settings', 'string', 'host', settings.host);\n      this.host = settings.host;\n\n      validateNamedOptionalType('settings', 'boolean', 'ssl', settings.ssl);\n      this.ssl = objUtils.defaulted(settings.ssl, DEFAULT_SSL);\n    }\n    validateOptionNames('settings', settings, ['host', 'ssl', 'credentials']);\n\n    validateNamedOptionalType(\n      'settings',\n      'object',\n      'credentials',\n      settings.credentials\n    );\n    this.credentials = settings.credentials;\n  }\n\n  equals(other: FirestoreSettings): boolean {\n    return (\n      this.host === other.host &&\n      this.ssl === other.ssl &&\n      this.credentials === other.credentials\n    );\n  }\n}\n\nclass FirestoreConfig {\n  databaseId: DatabaseId;\n  persistenceKey: string;\n  credentials: CredentialsProvider;\n  firebaseApp: FirebaseApp;\n  settings: FirestoreSettings;\n  persistence: boolean;\n}\n\n/**\n * The root reference to the database.\n */\nexport class Firestore implements firestore.Firestore, FirebaseService {\n  private readonly _config: FirestoreConfig;\n  public readonly _databaseId: DatabaseId;\n\n  // The firestore client instance. This will be available as soon as\n  // configureClient is called, but any calls against it will block until\n  // setup has completed.\n  //\n  // Operations on the _firestoreClient don't block on _firestoreReady. Those\n  // are already set to synchronize on the async queue.\n  private _firestoreClient: FirestoreClient | undefined;\n  public _dataConverter: UserDataConverter;\n\n  constructor(databaseIdOrApp: FirestoreDatabase | FirebaseApp) {\n    const config = new FirestoreConfig();\n    if (typeof (databaseIdOrApp as FirebaseApp).options === 'object') {\n      // This is very likely a Firebase app object\n      // TODO(b/34177605): Can we somehow use instanceof?\n      const app = databaseIdOrApp as FirebaseApp;\n      config.firebaseApp = app;\n      config.databaseId = Firestore.databaseIdFromApp(app);\n      config.persistenceKey = config.firebaseApp.name;\n      config.credentials = new FirebaseCredentialsProvider(app);\n    } else {\n      const external = databaseIdOrApp as FirestoreDatabase;\n      if (!external.projectId) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          'Must provide projectId'\n        );\n      }\n\n      config.databaseId = new DatabaseId(external.projectId, external.database);\n      // Use a default persistenceKey that lines up with FirebaseApp.\n      config.persistenceKey = '[DEFAULT]';\n      config.credentials = new EmptyCredentialsProvider();\n    }\n\n    config.settings = new FirestoreSettings({});\n    this._config = config;\n    this._databaseId = config.databaseId;\n  }\n\n  settings(settingsLiteral: firestore.Settings): void {\n    validateExactNumberOfArgs('Firestore.settings', arguments, 1);\n    validateArgType('Firestore.settings', 'object', 1, settingsLiteral);\n\n    if (\n      objUtils.contains(settingsLiteral as objUtils.Dict<{}>, 'persistence')\n    ) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        '\"persistence\" is now specified with a separate call to ' +\n          'firestore.enablePersistence().'\n      );\n    }\n\n    const newSettings = new FirestoreSettings(settingsLiteral);\n    if (this._firestoreClient && !this._config.settings.equals(newSettings)) {\n      throw new FirestoreError(\n        Code.FAILED_PRECONDITION,\n        'Firestore has already been started and its settings can no longer ' +\n          'be changed. You can only call settings() before calling any other ' +\n          'methods on a Firestore object.'\n      );\n    }\n\n    this._config.settings = newSettings;\n    if (newSettings.credentials !== undefined) {\n      this._config.credentials = makeCredentialsProvider(\n        newSettings.credentials\n      );\n    }\n  }\n\n  enablePersistence(): Promise<void> {\n    if (this._firestoreClient) {\n      throw new FirestoreError(\n        Code.FAILED_PRECONDITION,\n        'Firestore has already been started and persistence can no longer ' +\n          'be enabled. You can only call enablePersistence() before calling ' +\n          'any other methods on a Firestore object.'\n      );\n    }\n\n    return this.configureClient(/* persistence= */ true);\n  }\n\n  ensureClientConfigured(): FirestoreClient {\n    if (!this._firestoreClient) {\n      this.configureClient(/* persistence= */ false);\n    }\n    return this._firestoreClient as FirestoreClient;\n  }\n\n  private configureClient(persistence: boolean): Promise<void> {\n    assert(\n      !!this._config.settings.host,\n      'FirestoreSettings.host cannot be falsey'\n    );\n\n    assert(!this._firestoreClient, 'configureClient() called multiple times');\n\n    const databaseInfo = new DatabaseInfo(\n      this._config.databaseId,\n      this._config.persistenceKey,\n      this._config.settings.host,\n      this._config.settings.ssl\n    );\n\n    const preConverter = (value: AnyJs) => {\n      if (value instanceof DocumentReference) {\n        const thisDb = this._config.databaseId;\n        const otherDb = value.firestore._config.databaseId;\n        if (!otherDb.equals(thisDb)) {\n          throw new FirestoreError(\n            Code.INVALID_ARGUMENT,\n            'Document reference is for database ' +\n              `${otherDb.projectId}/${otherDb.database} but should be ` +\n              `for database ${thisDb.projectId}/${thisDb.database}`\n          );\n        }\n        return new DocumentKeyReference(this._config.databaseId, value._key);\n      } else {\n        return value;\n      }\n    };\n    this._dataConverter = new UserDataConverter(preConverter);\n\n    this._firestoreClient = new FirestoreClient(\n      PlatformSupport.getPlatform(),\n      databaseInfo,\n      this._config.credentials,\n      new AsyncQueue()\n    );\n    return this._firestoreClient.start(persistence);\n  }\n\n  private static databaseIdFromApp(app: FirebaseApp): DatabaseId {\n    const options = app.options as objUtils.Dict<{}>;\n    if (!objUtils.contains(options, 'projectId')) {\n      // TODO(b/62673263): We can safely remove the special handling of\n      // 'firestoreId' once alpha testers have upgraded.\n      if (objUtils.contains(options, 'firestoreId')) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          '\"firestoreId\" is now specified as \"projectId\" in ' +\n            'firebase.initializeApp.'\n        );\n      }\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        '\"projectId\" not provided in firebase.initializeApp.'\n      );\n    }\n\n    if (objUtils.contains(options, 'firestoreOptions')) {\n      // TODO(b/62673263): We can safely remove the special handling of\n      // 'firestoreOptions' once alpha testers have upgraded.\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        '\"firestoreOptions\" values are now specified with ' +\n          'Firestore.settings()'\n      );\n    }\n\n    const projectId = options['projectId'];\n    if (!projectId || typeof projectId !== 'string') {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'projectId must be a string in FirebaseApp.options'\n      );\n    }\n    return new DatabaseId(projectId);\n  }\n\n  get app(): FirebaseApp {\n    if (!this._config.firebaseApp) {\n      throw new FirestoreError(\n        Code.FAILED_PRECONDITION,\n        \"Firestore was not initialized using the Firebase SDK. 'app' is \" +\n          'not available'\n      );\n    }\n    return this._config.firebaseApp;\n  }\n\n  INTERNAL = {\n    delete: (): Promise<void> => {\n      if (this._firestoreClient) {\n        return this._firestoreClient.shutdown();\n      } else {\n        return Promise.resolve();\n      }\n    },\n    // Exposed via INTERNAL for use in tests.\n    disableNetwork: () => this._firestoreClient.disableNetwork(),\n    enableNetwork: () => this._firestoreClient.enableNetwork()\n  };\n\n  collection(pathString: string): firestore.CollectionReference {\n    validateExactNumberOfArgs('Firestore.collection', arguments, 1);\n    validateArgType('Firestore.collection', 'string', 1, pathString);\n    if (!pathString) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Must provide a non-empty collection path to collection()'\n      );\n    }\n\n    this.ensureClientConfigured();\n    return new CollectionReference(ResourcePath.fromString(pathString), this);\n  }\n\n  doc(pathString: string): firestore.DocumentReference {\n    validateExactNumberOfArgs('Firestore.doc', arguments, 1);\n    validateArgType('Firestore.doc', 'string', 1, pathString);\n    if (!pathString) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Must provide a non-empty document path to doc()'\n      );\n    }\n    this.ensureClientConfigured();\n    return DocumentReference.forPath(ResourcePath.fromString(pathString), this);\n  }\n\n  runTransaction<T>(\n    updateFunction: (transaction: firestore.Transaction) => Promise<T>\n  ): Promise<T> {\n    validateExactNumberOfArgs('Firestore.runTransaction', arguments, 1);\n    validateArgType('Firestore.runTransaction', 'function', 1, updateFunction);\n    return this.ensureClientConfigured().transaction(\n      (transaction: InternalTransaction) => {\n        return updateFunction(new Transaction(this, transaction));\n      }\n    );\n  }\n\n  batch(): firestore.WriteBatch {\n    this.ensureClientConfigured();\n\n    return new WriteBatch(this);\n  }\n\n  static get logLevel(): firestore.LogLevel {\n    switch (log.getLogLevel()) {\n      case LogLevel.DEBUG:\n        return 'debug';\n      case LogLevel.ERROR:\n        return 'error';\n      case LogLevel.SILENT:\n        return 'silent';\n      default:\n        return fail('Unknown log level: ' + log.getLogLevel());\n    }\n  }\n\n  static setLogLevel(level: firestore.LogLevel) {\n    validateExactNumberOfArgs('Firestore.setLogLevel', arguments, 1);\n    validateArgType('Firestore.setLogLevel', 'string', 1, level);\n    switch (level) {\n      case 'debug':\n        log.setLogLevel(log.LogLevel.DEBUG);\n        break;\n      case 'error':\n        log.setLogLevel(log.LogLevel.ERROR);\n        break;\n      case 'silent':\n        log.setLogLevel(log.LogLevel.SILENT);\n        break;\n      default:\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          'Invalid log level: ' + level\n        );\n    }\n  }\n}\n\n/**\n * A reference to a transaction.\n */\nexport class Transaction implements firestore.Transaction {\n  constructor(\n    private _firestore: Firestore,\n    private _transaction: InternalTransaction\n  ) {}\n\n  get(\n    documentRef: firestore.DocumentReference\n  ): Promise<firestore.DocumentSnapshot> {\n    validateExactNumberOfArgs('Transaction.get', arguments, 1);\n    const ref = validateReference(\n      'Transaction.get',\n      documentRef,\n      this._firestore\n    );\n    return this._transaction\n      .lookup([ref._key])\n      .then((docs: MaybeDocument[]) => {\n        if (!docs || docs.length !== 1) {\n          return fail('Mismatch in docs returned from document lookup.');\n        }\n        const doc = docs[0];\n        if (doc instanceof NoDocument) {\n          return new DocumentSnapshot(this._firestore, ref._key, null, false);\n        }\n        return new DocumentSnapshot(this._firestore, ref._key, doc, false);\n      });\n  }\n\n  set(\n    documentRef: firestore.DocumentReference,\n    value: firestore.DocumentData,\n    options?: firestore.SetOptions\n  ): Transaction {\n    validateBetweenNumberOfArgs('Transaction.set', arguments, 2, 3);\n    const ref = validateReference(\n      'Transaction.set',\n      documentRef,\n      this._firestore\n    );\n    options = validateSetOptions('Transaction.set', options);\n    const parsed = this._firestore._dataConverter.parseSetData(\n      'Transaction.set',\n      value,\n      options\n    );\n    this._transaction.set(ref._key, parsed);\n    return this;\n  }\n\n  update(\n    documentRef: firestore.DocumentReference,\n    value: firestore.UpdateData\n  ): Transaction;\n  update(\n    documentRef: firestore.DocumentReference,\n    field: string | ExternalFieldPath,\n    value: AnyJs,\n    ...moreFieldsAndValues: AnyJs[]\n  ): Transaction;\n  update(\n    documentRef: firestore.DocumentReference,\n    fieldOrUpdateData: string | ExternalFieldPath | firestore.UpdateData,\n    value?: AnyJs,\n    ...moreFieldsAndValues: AnyJs[]\n  ): Transaction {\n    let ref;\n    let parsed;\n\n    if (\n      typeof fieldOrUpdateData === 'string' ||\n      fieldOrUpdateData instanceof ExternalFieldPath\n    ) {\n      validateAtLeastNumberOfArgs('Transaction.update', arguments, 3);\n      ref = validateReference(\n        'Transaction.update',\n        documentRef,\n        this._firestore\n      );\n      parsed = this._firestore._dataConverter.parseUpdateVarargs(\n        'Transaction.update',\n        fieldOrUpdateData,\n        value,\n        moreFieldsAndValues\n      );\n    } else {\n      validateExactNumberOfArgs('Transaction.update', arguments, 2);\n      ref = validateReference(\n        'Transaction.update',\n        documentRef,\n        this._firestore\n      );\n      parsed = this._firestore._dataConverter.parseUpdateData(\n        'Transaction.update',\n        fieldOrUpdateData\n      );\n    }\n\n    this._transaction.update(ref._key, parsed);\n    return this;\n  }\n\n  delete(documentRef: firestore.DocumentReference): Transaction {\n    validateExactNumberOfArgs('Transaction.delete', arguments, 1);\n    const ref = validateReference(\n      'Transaction.delete',\n      documentRef,\n      this._firestore\n    );\n    this._transaction.delete(ref._key);\n    return this;\n  }\n}\n\nexport class WriteBatch implements firestore.WriteBatch {\n  private _mutations = [] as Mutation[];\n  private _committed = false;\n\n  constructor(private _firestore: Firestore) {}\n\n  set(\n    documentRef: firestore.DocumentReference,\n    value: firestore.DocumentData,\n    options?: firestore.SetOptions\n  ): WriteBatch {\n    validateBetweenNumberOfArgs('WriteBatch.set', arguments, 2, 3);\n    this.verifyNotCommitted();\n    const ref = validateReference(\n      'WriteBatch.set',\n      documentRef,\n      this._firestore\n    );\n    options = validateSetOptions('WriteBatch.set', options);\n    const parsed = this._firestore._dataConverter.parseSetData(\n      'WriteBatch.set',\n      value,\n      options\n    );\n    this._mutations = this._mutations.concat(\n      parsed.toMutations(ref._key, Precondition.NONE)\n    );\n    return this;\n  }\n\n  update(\n    documentRef: firestore.DocumentReference,\n    value: firestore.UpdateData\n  ): WriteBatch;\n  update(\n    documentRef: firestore.DocumentReference,\n    field: string | ExternalFieldPath,\n    value: AnyJs,\n    ...moreFieldsAndValues: AnyJs[]\n  ): WriteBatch;\n  update(\n    documentRef: firestore.DocumentReference,\n    fieldOrUpdateData: string | ExternalFieldPath | firestore.UpdateData,\n    value?: AnyJs,\n    ...moreFieldsAndValues: AnyJs[]\n  ): WriteBatch {\n    this.verifyNotCommitted();\n\n    let ref;\n    let parsed;\n\n    if (\n      typeof fieldOrUpdateData === 'string' ||\n      fieldOrUpdateData instanceof ExternalFieldPath\n    ) {\n      validateAtLeastNumberOfArgs('WriteBatch.update', arguments, 3);\n      ref = validateReference(\n        'WriteBatch.update',\n        documentRef,\n        this._firestore\n      );\n      parsed = this._firestore._dataConverter.parseUpdateVarargs(\n        'WriteBatch.update',\n        fieldOrUpdateData,\n        value,\n        moreFieldsAndValues\n      );\n    } else {\n      validateExactNumberOfArgs('WriteBatch.update', arguments, 2);\n      ref = validateReference(\n        'WriteBatch.update',\n        documentRef,\n        this._firestore\n      );\n      parsed = this._firestore._dataConverter.parseUpdateData(\n        'WriteBatch.update',\n        fieldOrUpdateData\n      );\n    }\n\n    this._mutations = this._mutations.concat(\n      parsed.toMutations(ref._key, Precondition.exists(true))\n    );\n    return this;\n  }\n\n  delete(documentRef: firestore.DocumentReference): WriteBatch {\n    validateExactNumberOfArgs('WriteBatch.delete', arguments, 1);\n    this.verifyNotCommitted();\n    const ref = validateReference(\n      'WriteBatch.delete',\n      documentRef,\n      this._firestore\n    );\n    this._mutations = this._mutations.concat(\n      new DeleteMutation(ref._key, Precondition.NONE)\n    );\n    return this;\n  }\n\n  commit(): Promise<void> {\n    this.verifyNotCommitted();\n    this._committed = true;\n    if (this._mutations.length > 0) {\n      return this._firestore.ensureClientConfigured().write(this._mutations);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  private verifyNotCommitted() {\n    if (this._committed) {\n      throw new FirestoreError(\n        Code.FAILED_PRECONDITION,\n        'A write batch can no longer be used after commit() ' +\n          'has been called.'\n      );\n    }\n  }\n}\n\n/**\n * A reference to a particular document in a collection in the database.\n */\nexport class DocumentReference implements firestore.DocumentReference {\n  private _firestoreClient: FirestoreClient;\n\n  constructor(public _key: DocumentKey, readonly firestore: Firestore) {\n    this._firestoreClient = this.firestore.ensureClientConfigured();\n  }\n\n  static forPath(path: ResourcePath, firestore: Firestore) {\n    if (path.length % 2 !== 0) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Invalid document reference. Document ' +\n          'references must have an even number of segments, but ' +\n          `${path.canonicalString()} has ${path.length}`\n      );\n    }\n    return new DocumentReference(new DocumentKey(path), firestore);\n  }\n\n  get id(): string {\n    return this._key.path.lastSegment();\n  }\n\n  get parent(): firestore.CollectionReference {\n    return new CollectionReference(this._key.path.popLast(), this.firestore);\n  }\n\n  get path(): string {\n    return this._key.path.canonicalString();\n  }\n\n  collection(pathString: string): firestore.CollectionReference {\n    validateExactNumberOfArgs('DocumentReference.collection', arguments, 1);\n    validateArgType('DocumentReference.collection', 'string', 1, pathString);\n    if (!pathString) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Must provide a non-empty collection name to collection()'\n      );\n    }\n    const path = ResourcePath.fromString(pathString);\n    return new CollectionReference(this._key.path.child(path), this.firestore);\n  }\n\n  isEqual(other: firestore.DocumentReference): boolean {\n    if (!(other instanceof DocumentReference)) {\n      throw invalidClassError('isEqual', 'DocumentReference', 1, other);\n    }\n    return this.firestore === other.firestore && this._key.equals(other._key);\n  }\n\n  set(\n    value: firestore.DocumentData,\n    options?: firestore.SetOptions\n  ): Promise<void> {\n    validateBetweenNumberOfArgs('DocumentReference.set', arguments, 1, 2);\n    options = validateSetOptions('DocumentReference.set', options);\n\n    const parsed = this.firestore._dataConverter.parseSetData(\n      'DocumentReference.set',\n      value,\n      options\n    );\n    return this._firestoreClient.write(\n      parsed.toMutations(this._key, Precondition.NONE)\n    );\n  }\n\n  update(value: firestore.UpdateData): Promise<void>;\n  update(\n    field: string | ExternalFieldPath,\n    value: AnyJs,\n    ...moreFieldsAndValues: AnyJs[]\n  ): Promise<void>;\n  update(\n    fieldOrUpdateData: string | ExternalFieldPath | firestore.UpdateData,\n    value?: AnyJs,\n    ...moreFieldsAndValues: AnyJs[]\n  ): Promise<void> {\n    let parsed;\n\n    if (\n      typeof fieldOrUpdateData === 'string' ||\n      fieldOrUpdateData instanceof ExternalFieldPath\n    ) {\n      validateAtLeastNumberOfArgs('DocumentReference.update', arguments, 2);\n      parsed = this.firestore._dataConverter.parseUpdateVarargs(\n        'DocumentReference.update',\n        fieldOrUpdateData,\n        value,\n        moreFieldsAndValues\n      );\n    } else {\n      validateExactNumberOfArgs('DocumentReference.update', arguments, 1);\n      parsed = this.firestore._dataConverter.parseUpdateData(\n        'DocumentReference.update',\n        fieldOrUpdateData\n      );\n    }\n\n    return this._firestoreClient.write(\n      parsed.toMutations(this._key, Precondition.exists(true))\n    );\n  }\n\n  delete(): Promise<void> {\n    validateExactNumberOfArgs('DocumentReference.delete', arguments, 0);\n    return this._firestoreClient.write([\n      new DeleteMutation(this._key, Precondition.NONE)\n    ]);\n  }\n\n  onSnapshot(\n    observer: PartialObserver<firestore.DocumentSnapshot>\n  ): Unsubscribe;\n  onSnapshot(\n    options: firestore.DocumentListenOptions,\n    observer: PartialObserver<firestore.DocumentSnapshot>\n  ): Unsubscribe;\n  onSnapshot(\n    onNext: NextFn<firestore.DocumentSnapshot>,\n    onError?: ErrorFn,\n    onCompletion?: CompleteFn\n  ): Unsubscribe;\n  onSnapshot(\n    options: firestore.DocumentListenOptions,\n    onNext: NextFn<firestore.DocumentSnapshot>,\n    onError?: ErrorFn,\n    onCompletion?: CompleteFn\n  ): Unsubscribe;\n\n  onSnapshot(...args: AnyJs[]): Unsubscribe {\n    validateBetweenNumberOfArgs(\n      'DocumentReference.onSnapshot',\n      arguments,\n      1,\n      4\n    );\n    let options: firestore.DocumentListenOptions = {\n      includeMetadataChanges: false\n    };\n    let observer: PartialObserver<firestore.DocumentSnapshot>;\n    let currArg = 0;\n    if (\n      typeof args[currArg] === 'object' &&\n      !isPartialObserver(args[currArg])\n    ) {\n      options = args[currArg] as firestore.DocumentListenOptions;\n      validateOptionNames('DocumentReference.onSnapshot', options, [\n        'includeMetadataChanges'\n      ]);\n      validateNamedOptionalType(\n        'DocumentReference.onSnapshot',\n        'boolean',\n        'includeMetadataChanges',\n        options.includeMetadataChanges\n      );\n      currArg++;\n    }\n\n    const internalOptions = {\n      includeDocumentMetadataChanges: options.includeMetadataChanges,\n      includeQueryMetadataChanges: options.includeMetadataChanges\n    };\n\n    if (isPartialObserver(args[currArg])) {\n      observer = args[currArg] as PartialObserver<firestore.DocumentSnapshot>;\n    } else {\n      validateArgType(\n        'DocumentReference.onSnapshot',\n        'function',\n        currArg,\n        args[currArg]\n      );\n      validateOptionalArgType(\n        'DocumentReference.onSnapshot',\n        'function',\n        currArg + 1,\n        args[currArg + 1]\n      );\n      validateOptionalArgType(\n        'DocumentReference.onSnapshot',\n        'function',\n        currArg + 2,\n        args[currArg + 2]\n      );\n      observer = {\n        next: args[currArg] as NextFn<firestore.DocumentSnapshot>,\n        error: args[currArg + 1] as ErrorFn,\n        complete: args[currArg + 2] as CompleteFn\n      };\n    }\n    return this.onSnapshotInternal(internalOptions, observer);\n  }\n\n  private onSnapshotInternal(\n    options: ListenOptions,\n    observer: PartialObserver<firestore.DocumentSnapshot>\n  ): Unsubscribe {\n    let errHandler = (err: Error) => {\n      console.error('Uncaught Error in onSnapshot:', err);\n    };\n    if (observer.error) {\n      errHandler = observer.error.bind(observer);\n    }\n\n    const asyncObserver = new AsyncObserver<ViewSnapshot>({\n      next: snapshot => {\n        if (observer.next) {\n          assert(\n            snapshot.docs.size <= 1,\n            'Too many documents returned on a document query'\n          );\n          const doc = snapshot.docs.get(this._key);\n\n          observer.next(\n            new DocumentSnapshot(\n              this.firestore,\n              this._key,\n              doc,\n              snapshot.fromCache\n            )\n          );\n        }\n      },\n      error: errHandler\n    });\n    const internalListener = this._firestoreClient.listen(\n      InternalQuery.atPath(this._key.path),\n      asyncObserver,\n      options\n    );\n\n    return () => {\n      asyncObserver.mute();\n      this._firestoreClient.unlisten(internalListener);\n    };\n  }\n\n  get(): Promise<firestore.DocumentSnapshot> {\n    validateExactNumberOfArgs('DocumentReference.get', arguments, 0);\n    return new Promise(\n      (resolve: Resolver<firestore.DocumentSnapshot>, reject: Rejecter) => {\n        const unlisten = this.onSnapshotInternal(\n          {\n            includeQueryMetadataChanges: true,\n            includeDocumentMetadataChanges: true,\n            waitForSyncWhenOnline: true\n          },\n          {\n            next: (snap: firestore.DocumentSnapshot) => {\n              // Remove query first before passing event to user to avoid\n              // user actions affecting the now stale query.\n              unlisten();\n\n              if (!snap.exists && snap.metadata.fromCache) {\n                // TODO(dimond): If we're online and the document doesn't\n                // exist then we resolve with a doc.exists set to false. If\n                // we're offline however, we reject the Promise in this\n                // case. Two options: 1) Cache the negative response from\n                // the server so we can deliver that even when you're\n                // offline 2) Actually reject the Promise in the online case\n                // if the document doesn't exist.\n                reject(\n                  new FirestoreError(\n                    Code.ABORTED,\n                    'Failed to get document because the client is ' + 'offline.'\n                  )\n                );\n              } else {\n                resolve(snap);\n              }\n            },\n            error: reject\n          }\n        );\n      }\n    );\n  }\n}\n\nexport class DocumentSnapshot implements firestore.DocumentSnapshot {\n  constructor(\n    private _firestore: Firestore,\n    private _key: DocumentKey,\n    public _document: Document | null,\n    private _fromCache: boolean\n  ) {}\n\n  data(): firestore.DocumentData {\n    validateExactNumberOfArgs('DocumentSnapshot.data', arguments, 0);\n    if (!this._document) {\n      throw new FirestoreError(\n        Code.NOT_FOUND,\n        \"This document doesn't exist. Check doc.exists to make sure \" +\n          'the document exists before calling doc.data().'\n      );\n    }\n    return this.convertObject(this._document.data);\n  }\n\n  get(fieldPath: string | ExternalFieldPath): AnyJs {\n    validateExactNumberOfArgs('DocumentSnapshot.get', arguments, 1);\n    if (!this._document) {\n      throw new FirestoreError(\n        Code.NOT_FOUND,\n        \"This document doesn't exist. Check doc.exists to make sure \" +\n          'the document exists before calling doc.get().'\n      );\n    }\n    const value = this._document.data.field(\n      fieldPathFromArgument('DocumentSnapshot.get', fieldPath)\n    );\n    return value === undefined ? undefined : this.convertValue(value);\n  }\n\n  get id(): string {\n    return this._key.path.lastSegment();\n  }\n\n  get ref(): firestore.DocumentReference {\n    return new DocumentReference(this._key, this._firestore);\n  }\n\n  get exists(): boolean {\n    return this._document !== null;\n  }\n\n  get metadata(): firestore.SnapshotMetadata {\n    return {\n      hasPendingWrites:\n        this._document !== null && this._document.hasLocalMutations,\n      fromCache: this._fromCache\n    };\n  }\n\n  private convertObject(data: ObjectValue): firestore.DocumentData {\n    const result: firestore.DocumentData = {};\n    data.forEach((key, value) => {\n      result[key] = this.convertValue(value);\n    });\n    return result;\n  }\n\n  private convertValue(value: FieldValue): AnyJs {\n    if (value instanceof ObjectValue) {\n      return this.convertObject(value);\n    } else if (value instanceof ArrayValue) {\n      return this.convertArray(value);\n    } else if (value instanceof RefValue) {\n      const key = value.value();\n      const database = this._firestore.ensureClientConfigured().databaseId();\n      if (!value.databaseId.equals(database)) {\n        // TODO(b/64130202): Somehow support foreign references.\n        log.error(\n          `Document ${this._key.path} contains a document ` +\n            `reference within a different database (` +\n            `${value.databaseId.projectId}/${value.databaseId\n              .database}) which is not ` +\n            `supported. It will be treated as a reference in the current ` +\n            `database (${database.projectId}/${database.database}) ` +\n            `instead.`\n        );\n      }\n      return new DocumentReference(key, this._firestore);\n    } else {\n      return value.value();\n    }\n  }\n\n  private convertArray(data: ArrayValue): AnyJs[] {\n    return data.internalValue.map(value => {\n      return this.convertValue(value);\n    });\n  }\n}\n\nexport class Query implements firestore.Query {\n  constructor(public _query: InternalQuery, readonly firestore: Firestore) {}\n\n  where(\n    field: string | ExternalFieldPath,\n    opStr: firestore.WhereFilterOp,\n    value: AnyJs\n  ): firestore.Query {\n    validateExactNumberOfArgs('Query.where', arguments, 3);\n    validateArgType('Query.where', 'string', 2, opStr);\n    validateDefined('Query.where', 3, value);\n    let fieldValue;\n    const fieldPath = fieldPathFromArgument('Query.where', field);\n    if (fieldPath.isKeyField()) {\n      if (typeof value === 'string') {\n        if (value.indexOf('/') !== -1) {\n          // TODO(dimond): Allow slashes once ancestor queries are supported\n          throw new FirestoreError(\n            Code.INVALID_ARGUMENT,\n            'Function Query.where() requires its third parameter to be a ' +\n              'valid document ID if the first parameter is ' +\n              'FieldPath.documentId(), but it contains a slash.'\n          );\n        }\n        if (value === '') {\n          throw new FirestoreError(\n            Code.INVALID_ARGUMENT,\n            'Function Query.where() requires its third parameter to be a ' +\n              'valid document ID if the first parameter is ' +\n              'FieldPath.documentId(), but it was an empty string.'\n          );\n        }\n        const path = this._query.path.child(new ResourcePath([value]));\n        assert(path.length % 2 === 0, 'Path should be a document key');\n        fieldValue = new RefValue(\n          this.firestore._databaseId,\n          new DocumentKey(path)\n        );\n      } else if (value instanceof DocumentReference) {\n        const ref = value as DocumentReference;\n        fieldValue = new RefValue(this.firestore._databaseId, ref._key);\n      } else {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Function Query.where() requires its third parameter to be a ` +\n            `string or a DocumentReference if the first parameter is ` +\n            `FieldPath.documentId(), but it was: ` +\n            `${valueDescription(value)}.`\n        );\n      }\n    } else {\n      fieldValue = this.firestore._dataConverter.parseQueryValue(\n        'Query.where',\n        value\n      );\n    }\n    const filter = fieldFilter(\n      fieldPath,\n      RelationOp.fromString(opStr),\n      fieldValue\n    );\n    this.validateNewFilter(filter);\n    return new Query(this._query.addFilter(filter), this.firestore);\n  }\n\n  orderBy(\n    field: string | ExternalFieldPath,\n    directionStr?: firestore.OrderByDirection\n  ): firestore.Query {\n    validateBetweenNumberOfArgs('Query.orderBy', arguments, 1, 2);\n    validateOptionalArgType('Query.orderBy', 'string', 2, directionStr);\n    let direction: Direction;\n    if (directionStr === undefined || directionStr === 'asc') {\n      direction = Direction.ASCENDING;\n    } else if (directionStr === 'desc') {\n      direction = Direction.DESCENDING;\n    } else {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `Function Query.orderBy() has unknown direction '${directionStr}', ` +\n          `expected 'asc' or 'desc'.`\n      );\n    }\n    if (this._query.startAt !== null) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Invalid query. You must not call Query.startAt() or ' +\n          'Query.startAfter() before calling Query.orderBy().'\n      );\n    }\n    if (this._query.endAt !== null) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Invalid query. You must not call Query.endAt() or ' +\n          'Query.endBefore() before calling Query.orderBy().'\n      );\n    }\n    const fieldPath = fieldPathFromArgument('Query.orderBy', field);\n    const orderBy = new OrderBy(fieldPath, direction);\n    this.validateNewOrderBy(orderBy);\n    return new Query(this._query.addOrderBy(orderBy), this.firestore);\n  }\n\n  limit(n: number): firestore.Query {\n    validateExactNumberOfArgs('Query.limit', arguments, 1);\n    validateArgType('Query.limit', 'number', 1, n);\n    if (n <= 0) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `Invalid Query. Query limit (${n}) is invalid. Limit must be ` +\n          'positive.'\n      );\n    }\n    return new Query(this._query.withLimit(n), this.firestore);\n  }\n\n  startAt(\n    docOrField: AnyJs | firestore.DocumentSnapshot,\n    ...fields: AnyJs[]\n  ): firestore.Query {\n    validateAtLeastNumberOfArgs('Query.startAt', arguments, 1);\n    const bound = this.boundFromDocOrFields(\n      'Query.startAt',\n      docOrField,\n      fields,\n      /*before=*/ true\n    );\n    return new Query(this._query.withStartAt(bound), this.firestore);\n  }\n\n  startAfter(\n    docOrField: AnyJs | firestore.DocumentSnapshot,\n    ...fields: AnyJs[]\n  ): firestore.Query {\n    validateAtLeastNumberOfArgs('Query.startAfter', arguments, 1);\n    const bound = this.boundFromDocOrFields(\n      'Query.startAfter',\n      docOrField,\n      fields,\n      /*before=*/ false\n    );\n    return new Query(this._query.withStartAt(bound), this.firestore);\n  }\n\n  endBefore(\n    docOrField: AnyJs | firestore.DocumentSnapshot,\n    ...fields: AnyJs[]\n  ): firestore.Query {\n    validateAtLeastNumberOfArgs('Query.endBefore', arguments, 1);\n    const bound = this.boundFromDocOrFields(\n      'Query.endBefore',\n      docOrField,\n      fields,\n      /*before=*/ true\n    );\n    return new Query(this._query.withEndAt(bound), this.firestore);\n  }\n\n  endAt(\n    docOrField: AnyJs | firestore.DocumentSnapshot,\n    ...fields: AnyJs[]\n  ): firestore.Query {\n    validateAtLeastNumberOfArgs('Query.endAt', arguments, 1);\n    const bound = this.boundFromDocOrFields(\n      'Query.endAt',\n      docOrField,\n      fields,\n      /*before=*/ false\n    );\n    return new Query(this._query.withEndAt(bound), this.firestore);\n  }\n\n  isEqual(other: firestore.Query): boolean {\n    if (!(other instanceof Query)) {\n      throw invalidClassError('isEqual', 'Query', 1, other);\n    }\n    return (\n      this.firestore === other.firestore && this._query.equals(other._query)\n    );\n  }\n\n  /** Helper function to create a bound from a document or fields */\n  private boundFromDocOrFields(\n    methodName: string,\n    docOrField: AnyJs | firestore.DocumentSnapshot,\n    fields: AnyJs[],\n    before: boolean\n  ): Bound {\n    validateDefined(methodName, 1, docOrField);\n    if (docOrField instanceof DocumentSnapshot) {\n      if (fields.length > 0) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Too many arguments provided to ${methodName}().`\n        );\n      }\n      const snap = docOrField;\n      if (!snap.exists) {\n        throw new FirestoreError(\n          Code.NOT_FOUND,\n          `Can't use a DocumentSnapshot that doesn't exist for ` +\n            `${methodName}().`\n        );\n      }\n      return this.boundFromDocument(methodName, snap._document!, before);\n    } else {\n      const allFields = [docOrField].concat(fields);\n      return this.boundFromFields(methodName, allFields, before);\n    }\n  }\n\n  /**\n   * Create a Bound from a query and a document.\n   *\n   * Note that the Bound will always include the key of the document\n   * and so only the provided document will compare equal to the returned\n   * position.\n   *\n   * Will throw if the document does not contain all fields of the order by\n   * of the query.\n   */\n  private boundFromDocument(\n    methodName: string,\n    doc: Document,\n    before: boolean\n  ): Bound {\n    const components: FieldValue[] = [];\n\n    // Because people expect to continue/end a query at the exact document\n    // provided, we need to use the implicit sort order rather than the explicit\n    // sort order, because it's guaranteed to contain the document key. That way\n    // the position becomes unambiguous and the query continues/ends exactly at\n    // the provided document. Without the key (by using the explicit sort\n    // orders), multiple documents could match the position, yielding duplicate\n    // results.\n    for (const orderBy of this._query.orderBy) {\n      if (orderBy.field.isKeyField()) {\n        components.push(new RefValue(this.firestore._databaseId, doc.key));\n      } else {\n        const value = doc.field(orderBy.field);\n        if (value !== undefined) {\n          components.push(value);\n        } else {\n          const field = orderBy.field.canonicalString();\n          throw new FirestoreError(\n            Code.INVALID_ARGUMENT,\n            `Invalid query. You are trying to start or end a query using a ` +\n              `document for which the field '${field}' (used as the ` +\n              `orderBy) does not exist.`\n          );\n        }\n      }\n    }\n    return new Bound(components, before);\n  }\n\n  /**\n   * Converts a list of field values to a Bound for the given query.\n   */\n  private boundFromFields(\n    methodName: string,\n    values: AnyJs[],\n    before: boolean\n  ): Bound {\n    // Use explicit order by's because it has to match the query the user made\n    const orderBy = this._query.explicitOrderBy;\n    if (values.length > orderBy.length) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `Too many arguments provided to ${methodName}(). ` +\n          `The number of arguments must be less than or equal to the ` +\n          `number of Query.orderBy() clauses`\n      );\n    }\n\n    const components: FieldValue[] = [];\n    for (let i = 0; i < values.length; i++) {\n      const rawValue = values[i];\n      const orderByComponent = orderBy[i];\n      if (orderByComponent.field.isKeyField()) {\n        if (typeof rawValue !== 'string') {\n          throw new FirestoreError(\n            Code.INVALID_ARGUMENT,\n            `Invalid query. Expected a string for document ID in ` +\n              `${methodName}(), but got a ${typeof rawValue}`\n          );\n        }\n        if (rawValue.indexOf('/') !== -1) {\n          throw new FirestoreError(\n            Code.INVALID_ARGUMENT,\n            `Invalid query. Document ID '${rawValue}' contains a slash in ` +\n              `${methodName}()`\n          );\n        }\n        const key = new DocumentKey(this._query.path.child(rawValue));\n        components.push(new RefValue(this.firestore._databaseId, key));\n      } else {\n        const wrapped = this.firestore._dataConverter.parseQueryValue(\n          methodName,\n          rawValue\n        );\n        components.push(wrapped);\n      }\n    }\n\n    return new Bound(components, before);\n  }\n\n  onSnapshot(observer: PartialObserver<firestore.QuerySnapshot>): Unsubscribe;\n  onSnapshot(\n    options: firestore.QueryListenOptions,\n    observer: PartialObserver<firestore.QuerySnapshot>\n  ): Unsubscribe;\n  onSnapshot(\n    onNext: NextFn<firestore.QuerySnapshot>,\n    onError?: ErrorFn,\n    onCompletion?: CompleteFn\n  ): Unsubscribe;\n  onSnapshot(\n    options: firestore.QueryListenOptions,\n    onNext: NextFn<firestore.QuerySnapshot>,\n    onError?: ErrorFn,\n    onCompletion?: CompleteFn\n  ): Unsubscribe;\n\n  onSnapshot(...args: AnyJs[]): Unsubscribe {\n    validateBetweenNumberOfArgs('Query.onSnapshot', arguments, 1, 4);\n    let options: firestore.QueryListenOptions = {};\n    let observer: PartialObserver<firestore.QuerySnapshot>;\n    let currArg = 0;\n    if (\n      typeof args[currArg] === 'object' &&\n      !isPartialObserver(args[currArg])\n    ) {\n      options = args[currArg] as firestore.QueryListenOptions;\n      validateOptionNames('Query.onSnapshot', options, [\n        'includeQueryMetadataChanges',\n        'includeDocumentMetadataChanges'\n      ]);\n      validateNamedOptionalType(\n        'Query.onSnapshot',\n        'boolean',\n        'includeDocumentMetadataChanges',\n        options.includeDocumentMetadataChanges\n      );\n      validateNamedOptionalType(\n        'Query.onSnapshot',\n        'boolean',\n        'includeQueryMetadataChanges',\n        options.includeQueryMetadataChanges\n      );\n      currArg++;\n    }\n\n    if (isPartialObserver(args[currArg])) {\n      observer = args[currArg] as PartialObserver<firestore.QuerySnapshot>;\n    } else {\n      validateArgType('Query.onSnapshot', 'function', currArg, args[currArg]);\n      validateOptionalArgType(\n        'Query.onSnapshot',\n        'function',\n        currArg + 1,\n        args[currArg + 1]\n      );\n      validateOptionalArgType(\n        'Query.onSnapshot',\n        'function',\n        currArg + 2,\n        args[currArg + 2]\n      );\n      observer = {\n        next: args[currArg] as NextFn<firestore.QuerySnapshot>,\n        error: args[currArg + 1] as ErrorFn,\n        complete: args[currArg + 2] as CompleteFn\n      };\n    }\n    return this.onSnapshotInternal(options, observer);\n  }\n\n  private onSnapshotInternal(\n    options: ListenOptions,\n    observer: PartialObserver<firestore.QuerySnapshot>\n  ): Unsubscribe {\n    let errHandler = (err: Error) => {\n      console.error('Uncaught Error in onSnapshot:', err);\n    };\n    if (observer.error) {\n      errHandler = observer.error.bind(observer);\n    }\n\n    const asyncObserver = new AsyncObserver<ViewSnapshot>({\n      next: (result: ViewSnapshot): void => {\n        if (observer.next) {\n          observer.next(new QuerySnapshot(this.firestore, this._query, result));\n        }\n      },\n      error: errHandler\n    });\n\n    const firestoreClient = this.firestore.ensureClientConfigured();\n    const internalListener = firestoreClient.listen(\n      this._query,\n      asyncObserver,\n      options\n    );\n    return () => {\n      asyncObserver.mute();\n      firestoreClient.unlisten(internalListener);\n    };\n  }\n\n  get(): Promise<firestore.QuerySnapshot> {\n    validateExactNumberOfArgs('Query.get', arguments, 0);\n    return new Promise(\n      (resolve: Resolver<firestore.QuerySnapshot>, reject: Rejecter) => {\n        const unlisten = this.onSnapshotInternal(\n          {\n            includeDocumentMetadataChanges: false,\n            includeQueryMetadataChanges: true,\n            waitForSyncWhenOnline: true\n          },\n          {\n            next: (result: firestore.QuerySnapshot) => {\n              // Remove query first before passing event to user to avoid\n              // user actions affecting the now stale query.\n              unlisten();\n\n              resolve(result);\n            },\n            error: reject\n          }\n        );\n      }\n    );\n  }\n\n  private validateNewFilter(filter: Filter): void {\n    if (filter instanceof RelationFilter && filter.isInequality()) {\n      const existingField = this._query.getInequalityFilterField();\n      if (existingField !== null && !existingField.equals(filter.field)) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          'Invalid query. All where filters with an inequality' +\n            ' (<, <=, >, or >=) must be on the same field. But you have' +\n            ` inequality filters on '${existingField.toString()}'` +\n            ` and '${filter.field.toString()}'`\n        );\n      }\n\n      const firstOrderByField = this._query.getFirstOrderByField();\n      if (firstOrderByField !== null) {\n        this.validateOrderByAndInequalityMatch(filter.field, firstOrderByField);\n      }\n    }\n  }\n\n  private validateNewOrderBy(orderBy: OrderBy): void {\n    if (this._query.getFirstOrderByField() === null) {\n      // This is the first order by. It must match any inequality.\n      const inequalityField = this._query.getInequalityFilterField();\n      if (inequalityField !== null) {\n        this.validateOrderByAndInequalityMatch(inequalityField, orderBy.field);\n      }\n    }\n  }\n\n  private validateOrderByAndInequalityMatch(\n    inequality: FieldPath,\n    orderBy: FieldPath\n  ): void {\n    if (!orderBy.equals(inequality)) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `Invalid query. You have a where filter with an inequality ` +\n          `(<, <=, >, or >=) on field '${inequality.toString()}' ` +\n          `and so you must also use '${inequality.toString()}' ` +\n          `as your first Query.orderBy(), but your first Query.orderBy() ` +\n          `is on field '${orderBy.toString()}' instead.`\n      );\n    }\n  }\n}\n\nexport class QuerySnapshot implements firestore.QuerySnapshot {\n  private _cachedChanges: firestore.DocumentChange[] | null = null;\n\n  readonly metadata: firestore.SnapshotMetadata;\n\n  constructor(\n    private _firestore: Firestore,\n    private _originalQuery: InternalQuery,\n    private _snapshot: ViewSnapshot\n  ) {\n    this.metadata = {\n      fromCache: _snapshot.fromCache,\n      hasPendingWrites: _snapshot.hasPendingWrites\n    };\n  }\n\n  get docs(): firestore.DocumentSnapshot[] {\n    const result: firestore.DocumentSnapshot[] = [];\n    this.forEach(doc => result.push(doc));\n    return result;\n  }\n\n  get empty(): boolean {\n    return this._snapshot.docs.isEmpty();\n  }\n\n  get size(): number {\n    return this._snapshot.docs.size;\n  }\n\n  forEach(\n    callback: (result: firestore.DocumentSnapshot) => void,\n    thisArg?: AnyJs\n  ): void {\n    validateBetweenNumberOfArgs('QuerySnapshot.forEach', arguments, 1, 2);\n    validateArgType('QuerySnapshot.forEach', 'function', 1, callback);\n    this._snapshot.docs.forEach(doc => {\n      callback.call(thisArg, this.convertToDocumentImpl(doc));\n    });\n  }\n\n  get query(): firestore.Query {\n    return new Query(this._originalQuery, this._firestore);\n  }\n\n  get docChanges(): firestore.DocumentChange[] {\n    if (!this._cachedChanges) {\n      this._cachedChanges = changesFromSnapshot(\n        this._firestore,\n        this._snapshot\n      );\n    }\n    return this._cachedChanges;\n  }\n\n  private convertToDocumentImpl(doc: Document): DocumentSnapshot {\n    return new DocumentSnapshot(\n      this._firestore,\n      doc.key,\n      doc,\n      this.metadata.fromCache\n    );\n  }\n}\n\nexport class CollectionReference extends Query\n  implements firestore.CollectionReference {\n  constructor(path: ResourcePath, firestore: Firestore) {\n    super(InternalQuery.atPath(path), firestore);\n    if (path.length % 2 !== 1) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Invalid collection reference. Collection ' +\n          'references must have an odd number of segments, but ' +\n          `${path.canonicalString()} has ${path.length}`\n      );\n    }\n  }\n\n  get id(): string {\n    return this._query.path.lastSegment();\n  }\n\n  get parent(): firestore.DocumentReference | null {\n    const parentPath = this._query.path.popLast();\n    if (parentPath.isEmpty()) {\n      return null;\n    } else {\n      return new DocumentReference(new DocumentKey(parentPath), this.firestore);\n    }\n  }\n\n  get path(): string {\n    return this._query.path.canonicalString();\n  }\n\n  doc(pathString?: string): firestore.DocumentReference {\n    validateBetweenNumberOfArgs('CollectionReference.doc', arguments, 0, 1);\n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    if (arguments.length === 0) {\n      pathString = AutoId.newId();\n    }\n    validateArgType('CollectionReference.doc', 'string', 1, pathString);\n    if (pathString === '') {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Document path must be a non-empty string'\n      );\n    }\n    const path = ResourcePath.fromString(pathString);\n    return DocumentReference.forPath(\n      this._query.path.child(path),\n      this.firestore\n    );\n  }\n\n  add(value: firestore.DocumentData): Promise<firestore.DocumentReference> {\n    validateExactNumberOfArgs('CollectionReference.add', arguments, 1);\n    validateArgType('CollectionReference.add', 'object', 1, value);\n    const docRef = this.doc();\n    return docRef.set(value).then(() => docRef);\n  }\n}\n\nfunction validateSetOptions(\n  methodName: string,\n  options: firestore.SetOptions | undefined\n): firestore.SetOptions {\n  if (options === undefined) {\n    return {\n      merge: false\n    };\n  }\n\n  validateOptionNames(methodName, options, ['merge']);\n  validateNamedOptionalType(methodName, 'boolean', 'merge', options.merge);\n  return options;\n}\n\nfunction validateReference(\n  methodName: string,\n  documentRef: firestore.DocumentReference,\n  firestore: Firestore\n): DocumentReference {\n  if (!(documentRef instanceof DocumentReference)) {\n    throw invalidClassError(methodName, 'DocumentReference', 1, documentRef);\n  } else if (documentRef.firestore !== firestore) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      'Provided document reference is from a different Firestore instance.'\n    );\n  } else {\n    return documentRef;\n  }\n}\n\n/**\n * Calculates the array of firestore.DocumentChange's for a given ViewSnapshot.\n *\n * Exported for testing.\n */\nexport function changesFromSnapshot(\n  firestore: Firestore,\n  snapshot: ViewSnapshot\n): firestore.DocumentChange[] {\n  if (snapshot.oldDocs.isEmpty()) {\n    // Special case the first snapshot because index calculation is easy and\n    // fast\n    let lastDoc: Document;\n    let index = 0;\n    return snapshot.docChanges.map(change => {\n      const doc = new DocumentSnapshot(\n        firestore,\n        change.doc.key,\n        change.doc,\n        snapshot.fromCache\n      );\n      assert(\n        change.type === ChangeType.Added,\n        'Invalid event type for first snapshot'\n      );\n      assert(\n        !lastDoc || snapshot.query.docComparator(lastDoc, change.doc) < 0,\n        'Got added events in wrong order'\n      );\n      lastDoc = change.doc;\n      return {\n        type: 'added' as firestore.DocumentChangeType,\n        doc,\n        oldIndex: -1,\n        newIndex: index++\n      };\n    });\n  } else {\n    // A DocumentSet that is updated incrementally as changes are applied to use\n    // to lookup the index of a document.\n    let indexTracker = snapshot.oldDocs;\n    return snapshot.docChanges.map(change => {\n      const doc = new DocumentSnapshot(\n        firestore,\n        change.doc.key,\n        change.doc,\n        snapshot.fromCache\n      );\n      let oldIndex = -1;\n      let newIndex = -1;\n      if (change.type !== ChangeType.Added) {\n        oldIndex = indexTracker.indexOf(change.doc.key);\n        assert(oldIndex >= 0, 'Index for document not found');\n        indexTracker = indexTracker.delete(change.doc.key);\n      }\n      if (change.type !== ChangeType.Removed) {\n        indexTracker = indexTracker.add(change.doc);\n        newIndex = indexTracker.indexOf(change.doc.key);\n      }\n      return { type: resultChangeType(change.type), doc, oldIndex, newIndex };\n    });\n  }\n}\n\nfunction resultChangeType(type: ChangeType): firestore.DocumentChangeType {\n  switch (type) {\n    case ChangeType.Added:\n      return 'added';\n    case ChangeType.Modified:\n    case ChangeType.Metadata:\n      return 'modified';\n    case ChangeType.Removed:\n      return 'removed';\n    default:\n      return fail('Unknown change type: ' + type);\n  }\n}\n\n// Export the classes with a private constructor (it will fail if invoked\n// at runtime). Note that this still allows instanceof checks.\n\n// We're treating the variables as class names, so disable checking for lower\n// case variable names.\n// tslint:disable:variable-name\nexport const PublicFirestore = makeConstructorPrivate(\n  Firestore,\n  'Use firebase.firestore() instead.'\n);\nexport const PublicTransaction = makeConstructorPrivate(\n  Transaction,\n  'Use firebase.firestore().runTransaction() instead.'\n);\nexport const PublicWriteBatch = makeConstructorPrivate(\n  WriteBatch,\n  'Use firebase.firestore().batch() instead.'\n);\nexport const PublicDocumentReference = makeConstructorPrivate(\n  DocumentReference,\n  'Use firebase.firestore().doc() instead.'\n);\nexport const PublicDocumentSnapshot = makeConstructorPrivate(DocumentSnapshot);\nexport const PublicQuery = makeConstructorPrivate(Query);\nexport const PublicQuerySnapshot = makeConstructorPrivate(QuerySnapshot);\nexport const PublicCollectionReference = makeConstructorPrivate(\n  CollectionReference,\n  'Use firebase.firestore().collection() instead.'\n);\n// tslint:enable:variable-name\n"]}