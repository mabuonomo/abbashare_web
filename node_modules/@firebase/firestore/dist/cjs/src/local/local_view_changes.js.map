{"version":3,"sources":["../src/local/local_view_changes.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAGH,uDAAiE;AACjE,oDAAsE;AAEtE;;;;GAIG;AACH;IACE,0BACW,KAAY,EACZ,SAAyB,EACzB,WAA2B;QAF3B,UAAK,GAAL,KAAK,CAAO;QACZ,cAAS,GAAT,SAAS,CAAgB;QACzB,gBAAW,GAAX,WAAW,CAAgB;IACnC,CAAC;IAEG,6BAAY,GAAnB,UAAoB,YAA0B;QAC5C,IAAI,SAAS,GAAG,4BAAc,EAAE,CAAC;QACjC,IAAI,WAAW,GAAG,4BAAc,EAAE,CAAC;QAEnC,GAAG,CAAC,CAAoB,UAAuB,EAAvB,KAAA,YAAY,CAAC,UAAU,EAAvB,cAAuB,EAAvB,IAAuB;YAA1C,IAAM,SAAS,SAAA;YAClB,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBACvB,KAAK,0BAAU,CAAC,KAAK;oBACnB,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBAC7C,KAAK,CAAC;gBACR,KAAK,0BAAU,CAAC,OAAO;oBACrB,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjD,KAAK,CAAC;gBACR,QAAQ;YAEV,CAAC;SACF;QAED,MAAM,CAAC,IAAI,gBAAgB,CAAC,YAAY,CAAC,KAAK,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;IAC1E,CAAC;IACH,uBAAC;AAAD,CA1BA,AA0BC,IAAA;AA1BY,4CAAgB","file":"local_view_changes.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Query } from '../core/query';\nimport { ChangeType, ViewSnapshot } from '../core/view_snapshot';\nimport { documentKeySet, DocumentKeySet } from '../model/collections';\n\n/**\n * A set of changes to what documents are currently in view and out of view for\n * a given query. These changes are sent to the LocalStore by the View (via\n * the SyncEngine) and are used to pin / unpin documents as appropriate.\n */\nexport class LocalViewChanges {\n  constructor(\n    readonly query: Query,\n    readonly addedKeys: DocumentKeySet,\n    readonly removedKeys: DocumentKeySet\n  ) {}\n\n  static fromSnapshot(viewSnapshot: ViewSnapshot): LocalViewChanges {\n    let addedKeys = documentKeySet();\n    let removedKeys = documentKeySet();\n\n    for (const docChange of viewSnapshot.docChanges) {\n      switch (docChange.type) {\n        case ChangeType.Added:\n          addedKeys = addedKeys.add(docChange.doc.key);\n          break;\n        case ChangeType.Removed:\n          removedKeys = removedKeys.add(docChange.doc.key);\n          break;\n        default:\n        // do nothing\n      }\n    }\n\n    return new LocalViewChanges(viewSnapshot.query, addedKeys, removedKeys);\n  }\n}\n"]}