{"version":3,"sources":["../src/platform/config.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAIH,OAAO,EAAE,UAAU,EAAE,MAAM,aAAa,CAAC;AACzC,OAAO,EACL,SAAS,EACT,yBAAyB,EACzB,uBAAuB,EACvB,sBAAsB,EACtB,eAAe,EACf,WAAW,EACX,mBAAmB,EACnB,iBAAiB,EACjB,gBAAgB,EACjB,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAC9C,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAC5C,OAAO,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;AAE1C,IAAM,kBAAkB,GAAG;IACzB,SAAS,EAAE,eAAe;IAC1B,QAAQ,EAAE,QAAQ;IAClB,IAAI,EAAE,UAAU;IAChB,WAAW,EAAE,iBAAiB;IAC9B,UAAU,EAAE,gBAAgB;IAC5B,iBAAiB,EAAE,uBAAuB;IAC1C,gBAAgB,EAAE,sBAAsB;IACxC,KAAK,EAAE,WAAW;IAClB,aAAa,EAAE,mBAAmB;IAClC,mBAAmB,EAAE,yBAAyB;IAC9C,SAAS,EAAE,SAAS;IACpB,UAAU,EAAE,gBAAgB;IAC5B,WAAW,EAAE,SAAS,CAAC,WAAW;CACnC,CAAC;AAEF;;GAEG;AACH,MAAM,+BAA+B,QAA2B;IAC9D,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAC/B,WAAW,EACX,UAAC,GAAgB,IAAK,OAAA,IAAI,SAAS,CAAC,GAAG,CAAC,EAAlB,CAAkB,EACxC,WAAW,CAAC,kBAAkB,CAAC,CAChC,CAAC;AACJ,CAAC;AAED;;;;GAIG;AACH,MAAM,iCAAiC,YAEtC;IACC,IAAM,eAAe,GAAG,WAAW,CAAC,kBAAkB,CAAC,CAAC;IACxD,qEAAqE;IACrE,6CAA6C;IAC7C,eAAe,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC;IACzC,YAAY,CAAC,WAAW,CAAC,GAAG,eAAe,CAAC;AAC9C,CAAC","file":"config.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as firestore from 'firestore';\nimport { FirebaseApp, FirebaseNamespace } from '@firebase/app';\nimport { PublicBlob } from '../api/blob';\nimport {\n  Firestore,\n  PublicCollectionReference,\n  PublicDocumentReference,\n  PublicDocumentSnapshot,\n  PublicFirestore,\n  PublicQuery,\n  PublicQuerySnapshot,\n  PublicTransaction,\n  PublicWriteBatch\n} from '../api/database';\nimport { FieldPath } from '../api/field_path';\nimport { PublicFieldValue } from '../api/field_value';\nimport { GeoPoint } from '../api/geo_point';\nimport { shallowCopy } from '../util/obj';\n\nconst firestoreNamespace = {\n  Firestore: PublicFirestore,\n  GeoPoint: GeoPoint,\n  Blob: PublicBlob,\n  Transaction: PublicTransaction,\n  WriteBatch: PublicWriteBatch,\n  DocumentReference: PublicDocumentReference,\n  DocumentSnapshot: PublicDocumentSnapshot,\n  Query: PublicQuery,\n  QuerySnapshot: PublicQuerySnapshot,\n  CollectionReference: PublicCollectionReference,\n  FieldPath: FieldPath,\n  FieldValue: PublicFieldValue,\n  setLogLevel: Firestore.setLogLevel\n};\n\n/**\n * Configures Firestore as part of the Firebase SDK by calling registerService.\n */\nexport function configureForFirebase(firebase: FirebaseNamespace): void {\n  firebase.INTERNAL.registerService(\n    'firestore',\n    (app: FirebaseApp) => new Firestore(app),\n    shallowCopy(firestoreNamespace)\n  );\n}\n\n/**\n * Exports the Firestore namespace into the provided `exportObject` object under\n * the key 'firestore'. This is used for wrapped binary that exposes Firestore\n * as a goog module.\n */\nexport function configureForStandalone(exportObject: {\n  [key: string]: {};\n}): void {\n  const copiedNamespace = shallowCopy(firestoreNamespace);\n  // Unlike the use with Firebase, the standalone allows the use of the\n  // constructor, so export it's internal class\n  copiedNamespace['Firestore'] = Firestore;\n  exportObject['firestore'] = copiedNamespace;\n}\n"]}