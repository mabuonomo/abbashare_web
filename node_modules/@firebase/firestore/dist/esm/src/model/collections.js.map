{"version":3,"sources":["../src/model/collections.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAC/C,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAG/C,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAK7C,IAAM,wBAAwB,GAAG,IAAI,SAAS,CAC5C,WAAW,CAAC,UAAU,CACvB,CAAC;AACF,MAAM;IACJ,MAAM,CAAC,wBAAwB,CAAC;AAClC,CAAC;AAGD,IAAM,kBAAkB,GAAG,IAAI,SAAS,CACtC,WAAW,CAAC,UAAU,CACvB,CAAC;AACF,MAAM;IACJ,MAAM,CAAC,kBAAkB,CAAC;AAC5B,CAAC;AAGD,IAAM,0BAA0B,GAAG,IAAI,SAAS,CAC9C,WAAW,CAAC,UAAU,CACvB,CAAC;AACF,MAAM;IACJ,MAAM,CAAC,0BAA0B,CAAC;AACpC,CAAC;AAGD,IAAM,sBAAsB,GAAG,IAAI,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;AACrE,MAAM;IACJ,MAAM,CAAC,sBAAsB,CAAC;AAChC,CAAC","file":"collections.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { SortedMap } from '../util/sorted_map';\nimport { SortedSet } from '../util/sorted_set';\n\nimport { Document, MaybeDocument } from './document';\nimport { DocumentKey } from './document_key';\n\n/** Miscellaneous collection types / constants. */\n\nexport type MaybeDocumentMap = SortedMap<DocumentKey, MaybeDocument>;\nconst EMPTY_MAYBE_DOCUMENT_MAP = new SortedMap<DocumentKey, MaybeDocument>(\n  DocumentKey.comparator\n);\nexport function maybeDocumentMap() {\n  return EMPTY_MAYBE_DOCUMENT_MAP;\n}\n\nexport type DocumentMap = SortedMap<DocumentKey, Document>;\nconst EMPTY_DOCUMENT_MAP = new SortedMap<DocumentKey, Document>(\n  DocumentKey.comparator\n);\nexport function documentMap() {\n  return EMPTY_DOCUMENT_MAP;\n}\n\nexport type DocumentVersionMap = SortedMap<DocumentKey, SnapshotVersion>;\nconst EMPTY_DOCUMENT_VERSION_MAP = new SortedMap<DocumentKey, SnapshotVersion>(\n  DocumentKey.comparator\n);\nexport function documentVersionMap() {\n  return EMPTY_DOCUMENT_VERSION_MAP;\n}\n\nexport type DocumentKeySet = SortedSet<DocumentKey>;\nconst EMPTY_DOCUMENT_KEY_SET = new SortedSet(DocumentKey.comparator);\nexport function documentKeySet() {\n  return EMPTY_DOCUMENT_KEY_SET;\n}\n"]}