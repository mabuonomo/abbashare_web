{"version":3,"sources":["../src/api/field_value.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;AAIH,OAAO,EAAE,sBAAsB,EAAE,MAAM,aAAa,CAAC;AAErD;;;GAGG;AACH,4EAA4E;AAC5E;IAAA;IAOA,CAAC;IANQ,qBAAM,GAAb;QACE,MAAM,CAAC,oBAAoB,CAAC,QAAQ,CAAC;IACvC,CAAC;IACM,8BAAe,GAAtB;QACE,MAAM,CAAC,6BAA6B,CAAC,QAAQ,CAAC;IAChD,CAAC;IACH,qBAAC;AAAD,CAPA,AAOC,IAAA;;AAED;IAA0C,wCAAc;IACtD;eACE,iBAAO;IACT,CAAC;IACD,0BAA0B;IACnB,6BAAQ,GAAG,IAAI,oBAAoB,EAAE,CAAC;IAC/C,2BAAC;CAND,AAMC,CANyC,cAAc,GAMvD;SANY,oBAAoB;AAQjC;IAAmD,iDAAc;IAC/D;eACE,iBAAO;IACT,CAAC;IACD,0BAA0B;IACnB,sCAAQ,GAAG,IAAI,6BAA6B,EAAE,CAAC;IACxD,oCAAC;CAND,AAMC,CANkD,cAAc,GAMhE;SANY,6BAA6B;AAQ1C,8EAA8E;AAC9E,+EAA+E;AAC/E,8EAA8E;AAC9E,uEAAuE;AACvE,qEAAqE;AACrE,6EAA6E;AAC7E,kEAAkE;AAClE,yEAAyE;AACzE,MAAM,CAAC,IAAM,gBAAgB,GAAG,sBAAsB,CACpD,cAAc,EACd,mCAAmC,CACpC,CAAC","file":"field_value.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as firestore from 'firestore';\n\nimport { makeConstructorPrivate } from '../util/api';\n\n/**\n * An opaque base class for FieldValue sentinel objects in our public API,\n * with public static methods for creating said sentinel objects.\n */\n// tslint:disable-next-line:class-as-namespace  We use this as a base class.\nexport abstract class FieldValueImpl implements firestore.FieldValue {\n  static delete(): FieldValueImpl {\n    return DeleteFieldValueImpl.instance;\n  }\n  static serverTimestamp(): FieldValueImpl {\n    return ServerTimestampFieldValueImpl.instance;\n  }\n}\n\nexport class DeleteFieldValueImpl extends FieldValueImpl {\n  private constructor() {\n    super();\n  }\n  /** Singleton instance. */\n  static instance = new DeleteFieldValueImpl();\n}\n\nexport class ServerTimestampFieldValueImpl extends FieldValueImpl {\n  private constructor() {\n    super();\n  }\n  /** Singleton instance. */\n  static instance = new ServerTimestampFieldValueImpl();\n}\n\n// Public instance that disallows construction at runtime. This constructor is\n// used when exporting FieldValueImpl on firebase.firestore.FieldValue and will\n// be called FieldValue publicly. Internally we still use FieldValueImpl which\n// has a type-checked private constructor. Note that FieldValueImpl and\n// PublicFieldValue can be used interchangeably in instanceof checks.\n// For our internal TypeScript code PublicFieldValue doesn't exist as a type,\n// and so we need to use FieldValueImpl as type and export it too.\n// tslint:disable-next-line:variable-name  We treat this as a class name.\nexport const PublicFieldValue = makeConstructorPrivate(\n  FieldValueImpl,\n  'Use FieldValue.<field>() instead.'\n);\n"]}