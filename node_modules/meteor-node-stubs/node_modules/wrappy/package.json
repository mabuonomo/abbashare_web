{
  "_args": [
    [
      {
        "raw": "wrappy@https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
        "scope": null,
        "escapedName": "wrappy",
        "name": "wrappy",
        "rawSpec": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
        "spec": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
        "type": "remote"
      },
      "/home/mario/projects/omnia/meteor_abbashare/node_modules/meteor-node-stubs"
    ]
  ],
  "_from": "wrappy@>=1.0.0 <2.0.0",
  "_id": "wrappy@1.0.2",
  "_inCache": true,
  "_location": "/meteor-node-stubs/wrappy",
  "_phantomChildren": {},
  "_requested": {
    "raw": "wrappy@https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
    "scope": null,
    "escapedName": "wrappy",
    "name": "wrappy",
    "rawSpec": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
    "spec": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/meteor-node-stubs",
    "/meteor-node-stubs/inflight",
    "/meteor-node-stubs/once"
  ],
  "_resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
  "_shasum": "b5243d8f3ec1aa35f1364605bc0d1036e30ab69f",
  "_shrinkwrap": null,
  "_spec": "wrappy@https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
  "_where": "/home/mario/projects/omnia/meteor_abbashare/node_modules/meteor-node-stubs",
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/"
  },
  "bugs": {
    "url": "https://github.com/npm/wrappy/issues"
  },
  "dependencies": {},
  "description": "Callback wrapping utility",
  "devDependencies": {
    "tap": "^2.3.1"
  },
  "directories": {
    "test": "test"
  },
  "files": [
    "wrappy.js"
  ],
  "homepage": "https://github.com/npm/wrappy",
  "license": "ISC",
  "main": "wrappy.js",
  "name": "wrappy",
  "optionalDependencies": {},
  "readme": "# wrappy\n\nCallback wrapping utility\n\n## USAGE\n\n```javascript\nvar wrappy = require(\"wrappy\")\n\n// var wrapper = wrappy(wrapperFunction)\n\n// make sure a cb is called only once\n// See also: http://npm.im/once for this specific use case\nvar once = wrappy(function (cb) {\n  var called = false\n  return function () {\n    if (called) return\n    called = true\n    return cb.apply(this, arguments)\n  }\n})\n\nfunction printBoo () {\n  console.log('boo')\n}\n// has some rando property\nprintBoo.iAmBooPrinter = true\n\nvar onlyPrintOnce = once(printBoo)\n\nonlyPrintOnce() // prints 'boo'\nonlyPrintOnce() // does nothing\n\n// random property is retained!\nassert.equal(onlyPrintOnce.iAmBooPrinter, true)\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/npm/wrappy.git"
  },
  "scripts": {
    "test": "tap --coverage test/*.js"
  },
  "version": "1.0.2"
}
