{
  "_args": [
    [
      {
        "raw": "detective@~3.1.0",
        "scope": null,
        "escapedName": "detective",
        "name": "detective",
        "rawSpec": "~3.1.0",
        "spec": ">=3.1.0 <3.2.0",
        "type": "range"
      },
      "/home/mario/projects/omnia/meteor_abbashare/node_modules/rename-function-calls"
    ]
  ],
  "_from": "detective@>=3.1.0 <3.2.0",
  "_id": "detective@3.1.0",
  "_inCache": true,
  "_location": "/rename-function-calls/detective",
  "_npmUser": {
    "name": "substack",
    "email": "mail@substack.net"
  },
  "_npmVersion": "1.4.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "detective@~3.1.0",
    "scope": null,
    "escapedName": "detective",
    "name": "detective",
    "rawSpec": "~3.1.0",
    "spec": ">=3.1.0 <3.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/rename-function-calls"
  ],
  "_resolved": "https://registry.npmjs.org/detective/-/detective-3.1.0.tgz",
  "_shasum": "77782444ab752b88ca1be2e9d0a0395f1da25eed",
  "_shrinkwrap": null,
  "_spec": "detective@~3.1.0",
  "_where": "/home/mario/projects/omnia/meteor_abbashare/node_modules/rename-function-calls",
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "bugs": {
    "url": "https://github.com/substack/node-detective/issues"
  },
  "dependencies": {
    "escodegen": "~1.1.0",
    "esprima-fb": "3001.1.0-dev-harmony-fb"
  },
  "description": "find all require() calls by walking the AST",
  "devDependencies": {
    "tap": "~0.4.0"
  },
  "directories": {},
  "dist": {
    "shasum": "77782444ab752b88ca1be2e9d0a0395f1da25eed",
    "tarball": "https://registry.npmjs.org/detective/-/detective-3.1.0.tgz"
  },
  "homepage": "https://github.com/substack/node-detective#readme",
  "keywords": [
    "require",
    "source",
    "analyze",
    "ast"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "substack",
      "email": "mail@substack.net"
    }
  ],
  "name": "detective",
  "optionalDependencies": {},
  "readme": "# detective\n\nfind all calls to `require()` by walking the AST\n\n[![build status](https://secure.travis-ci.org/substack/node-detective.png)](http://travis-ci.org/substack/node-detective)\n\n# example\n\n## strings\n\nstrings_src.js:\n\n``` js\nvar a = require('a');\nvar b = require('b');\nvar c = require('c');\n```\n\nstrings.js:\n\n``` js\nvar detective = require('detective');\nvar fs = require('fs');\n\nvar src = fs.readFileSync(__dirname + '/strings_src.js');\nvar requires = detective(src);\nconsole.dir(requires);\n```\n\noutput:\n\n```\n$ node examples/strings.js\n[ 'a', 'b', 'c' ]\n```\n\n# methods\n\n``` js\nvar detective = require('detective');\n```\n\n## detective(src, opts)\n\nGive some source body `src`, return an array of all the `require()` calls with\nstring arguments.\n\nThe options parameter `opts` is passed along to `detective.find()`.\n\n## detective.find(src, opts)\n\nGive some source body `src`, return an object with \"strings\" and \"expressions\"\narrays for each of the require() calls.\n\nThe \"expressions\" array will contain the stringified expressions.\n\nOptionally you can specify a different function besides `\"require\"` to analyze\nwith `opts.word`.\n\nYou can also specify `opts.nodes = true` in order to include a \"nodes\" array \nwhich contains an AST node for each of the require() calls.\n\nYou can use `opts.isRequire(node)` to return a boolean signifying whether an\nesprima AST `node` is a require call.\n\nYou can use `opts.parse` to supply options parsed to the parser ([esprima](http://esprima.org/doc/index.html)).\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install detective\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/node-detective.git"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "version": "3.1.0"
}
