{
  "_args": [
    [
      {
        "raw": "ngdropzone@^2.0.2",
        "scope": null,
        "escapedName": "ngdropzone",
        "name": "ngdropzone",
        "rawSpec": "^2.0.2",
        "spec": ">=2.0.2 <3.0.0",
        "type": "range"
      },
      "/home/mario/projects/omnia/meteor_abbashare"
    ]
  ],
  "_from": "ngdropzone@>=2.0.2 <3.0.0",
  "_id": "ngdropzone@2.0.2",
  "_inCache": true,
  "_location": "/ngdropzone",
  "_nodeVersion": "6.9.4",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/ngdropzone-2.0.2.tgz_1487941924488_0.14292156067676842"
  },
  "_npmUser": {
    "name": "thatisuday",
    "email": "thatisuday@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ngdropzone@^2.0.2",
    "scope": null,
    "escapedName": "ngdropzone",
    "name": "ngdropzone",
    "rawSpec": "^2.0.2",
    "spec": ">=2.0.2 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ngdropzone/-/ngdropzone-2.0.2.tgz",
  "_shasum": "57863a54a39ae66dd533026d0a3145222390c58b",
  "_shrinkwrap": null,
  "_spec": "ngdropzone@^2.0.2",
  "_where": "/home/mario/projects/omnia/meteor_abbashare",
  "author": {
    "name": "Uday Hiwarale",
    "email": "uhiwarale@gmail.com",
    "url": "https://github.com/thatisuday"
  },
  "bugs": {
    "url": "https://github.com/thatisuday/ng-dropzone/issues"
  },
  "dependencies": {},
  "description": "AngularJS directive for __[dropzone](https://github.com/enyo/dropzone)__",
  "devDependencies": {
    "gulp": "^3.9.1",
    "gulp-autoprefixer": "^3.1.0",
    "gulp-concat": "^2.6.0",
    "gulp-cssmin": "^0.1.7",
    "gulp-gzip": "^1.4.0",
    "gulp-rename": "^1.2.2",
    "gulp-sass": "^2.3.2",
    "gulp-sourcemaps": "^1.6.0",
    "gulp-uglify": "^1.5.4"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "57863a54a39ae66dd533026d0a3145222390c58b",
    "tarball": "https://registry.npmjs.org/ngdropzone/-/ngdropzone-2.0.2.tgz"
  },
  "gitHead": "bc01b767699b3419f43ad15a4d9869b909c52471",
  "homepage": "https://github.com/thatisuday/ng-dropzone#readme",
  "license": "ISC",
  "main": "dist/ng-dropzone.js",
  "maintainers": [
    {
      "name": "thatisuday",
      "email": "uhiwarale@gmail.com"
    }
  ],
  "name": "ngdropzone",
  "optionalDependencies": {},
  "readme": "\r\n![](https://camo.githubusercontent.com/0ac4844780d7e981e44a9ca97887476f50a0b840/687474703a2f2f7777772e64726f707a6f6e656a732e636f6d2f696d616765732f6e65772d6c6f676f2e737667)\r\n\r\n# ng-dropzone  ![bower](https://img.shields.io/bower/v/ngdropzone.svg?style=flat-square) [![npm downloads](https://img.shields.io/npm/dt/ngdropzone.svg?style=flat-square)](https://www.npmjs.com/package/ngdropzone) [![preview](https://img.shields.io/badge/preview-click here-green.svg?style=flat-square)](https://rawgit.com/thatisuday/ng-dropzone/master/demo/main.html)\r\n\r\nAngularJS directive for __[dropzone](https://github.com/enyo/dropzone)__\r\n\r\n#### UPDATE\r\nIn latest release **v1.0.5**, distribution files have been renamed to match newly changed package name. Please **rename urls** to distribution files if you are updating this package. Also, **gulp** and **sass** support have been added. \r\n\r\n***\r\n\r\n## 1. Getting started\r\n\r\n### → Install using npm\r\n```\r\nnpm install ngdropzone\r\n```\r\n\r\n### → Install using bower\r\nRun following command in your working directory using shell/cmd\r\n```\r\nbower install ngdropzone\r\n```\r\n\r\n1. Include `angular.js` and `dropzone.js`, `dropzone.css` from bower_components.\r\n2. Include `ng-dropzone.min.js` from `dist` folder of `ng-dropzone` package inside bower_component.\r\n3. You can also include `ng-dropzone.min.css` but it's not necessary. I have **overridden** some **ugly looking** css from `dropzone.css`\r\n\r\n### → Install manually\r\n##### Step 1\r\nYou must have AngularJS library included for this directive to work : [Download from Google CDN](https://developers.google.com/speed/libraries/#angularjs)\r\n\r\n##### Step 2\r\nYou need to download `dropzone.js` and `dropzone.css` files from dropzone repository : [Get from official release](https://github.com/enyo/dropzone/releases/tag/v4.3.0)\r\n\r\n##### Step 3\r\nDownload `ng-dropzone.min.js` from this [official release](https://github.com/thatisuday/ng-dropzone/releases)\r\n\r\n##### Step 4\r\nInclude above files in `<head></head>` section of your html page\r\n\r\n----------\r\n\r\n## 2. Create .js file and set _Dropzone.autoDiscover_ to _false_\r\n```\r\n//Add below line at the top of your JavaScript code\r\nDropzone.autoDiscover = false;\r\n//This will prevent Dropzone to instantiate on it's own unless you are using dropzone class for styling\r\n```\r\n\r\n***\r\n\r\n## 3. Configure your angular app\r\nInclude `thatisuday.dropzone` module inside your angular app.\r\n```\r\nvar myNgApp = angular.module('myAppName', ['thatisuday.dropzone']);\r\n```\r\n\r\n####⛹Optional\r\n> You can configure dropzone before an app starts running. ng-dropzone comes with built in **dropzoneOps** provider to configure [dropzone options](http://www.dropzonejs.com/#configuration-options) which can be implemented as below. _setOptions_ function will set default options fot all your dropzone instances in that app.\r\n\r\n```\r\nmyNgApp.config(function(dropzoneOpsProvider){\r\n\tdropzoneOpsProvider.setOptions({\r\n\t\turl : '/upload_url',\r\n\t\tmaxFilesize : '10',\r\n\t\t...\r\n\t});\r\n});\r\n```\r\n\r\n####⛹Optional\r\n>You can also add default options in **dropzoneOps** provider `(ng-dropzone.min.js)` inside `defOps` object. This is very helpful in case you have multiple apps.  **_But it is not recommended because if you upgrade this directive in future, your app might not behave the way it should._**\r\n\r\n***\r\n\r\n## 4. Create dropzone(s)\r\nYou can create dropzone using `ng-dropzone` attribute or `<ng-dropzone></ng-dropzone>` element.\r\n```\r\n<div class=\"dropzone\" options=\"dzOptions\" callbacks=\"dzCallbacks\" methods=\"dzMethods\" ng-dropzone></div>\r\n```\r\n**_OR_**\r\n```\r\n<ng-dropzone class=\"dropzone\" options=\"dzOptions\" callbacks=\"dzCallbacks\" methods=\"dzMethods\"></ng-dropzone>\r\n```\r\n> **options** attribute specifies model that will set [options (click to see)](http://www.dropzonejs.com/#configuration-options) for dropzone and will override any options that may have been provided with **dropzoneOps** provider. For example, `$scope.dzOptions = {bla:bleh,...};`\r\n\r\n> **callbacks** attribute specifies model that will handle [events (click to see)](http://www.dropzonejs.com/#events) for dropzone. For example, `$scope.dzCallbacks.addedfile = function(file){//do something};`\r\n\r\n> **methods** attribute specifies model that will set [methods (click to see)](http://www.dropzonejs.com/#dropzone-methods) for dropzone. For example, `$scope.dzMethods.removeFile(file);` or `<button ng-click=\"dzMethods.removeAllFiles();\">...</button>`\r\n\r\nAs per above example, **_dzOptions_** is model that set options for dropzone, **_dzCallbacks_** is model that handles events for dropzone while **_dzMethods_** is _gateway_ model that triggers dropzone methods.\r\n\r\n***\r\n\r\n## 5. Configure dropzone(s)\r\n**callbacks** are not necessary for your dropzone to work, these are just events that you may need as a callback for certain activities of your dropzone. But **options** must be given inside your controller _unless you are configuring it from **dropzoneOps** provider_. _url_ field in dropzone options is mandatory.\r\n\r\n```\r\nmyNgApp.controller('main', function($scope){\r\n\t//Set options for dropzone\r\n\t//Visit http://www.dropzonejs.com/#configuration-options for more options\r\n\t$scope.dzOptions = {\r\n\t\turl : '/alt_upload_url',\r\n\t\tparamName : 'photo',\r\n\t\tmaxFilesize : '10',\r\n\t\tacceptedFiles : 'image/jpeg, images/jpg, image/png',\r\n\t\taddRemoveLinks : true,\r\n\t\t...\r\n\t};\r\n\t\r\n\t\r\n\t//Handle events for dropzone\r\n\t//Visit http://www.dropzonejs.com/#events for more events\r\n\t$scope.dzCallbacks = {\r\n\t\t'addedfile' : function(file){\r\n\t\t\tconsole.log(file);\r\n\t\t\t$scope.newFile = file;\r\n\t\t},\r\n\t\t'success' : function(file, xhr){\r\n\t\t\tconsole.log(file, xhr);\r\n\t\t},\r\n\t\t...\r\n\t};\r\n\t\r\n\t\r\n\t//Apply methods for dropzone\r\n\t//Visit http://www.dropzonejs.com/#dropzone-methods for more methods\r\n\t$scope.dzMethods = {};\r\n\t$scope.removeNewFile = function(){\r\n\t\t$scope.dzMethods.removeFile($scope.newFile); //We got $scope.newFile from 'addedfile' event callback\r\n\t}\r\n});\r\n```\r\n\r\nBy default, dropzone starts file upload when file is dropped or added to the list. But this can be prevented using `autoProcessQueue:false` in options. Then you have to manually start file upload using **_dzMethods_** model. You just have to call function `dzMethods.processQueue();` to start upload.\r\n\r\n> For better understanding, **__⚑__**  checkout source code in /test/test.html file or visit second example in  [preview](https://rawgit.com/thatisuday/ng-dropzone/master/demo/main.html) of this directive.\r\n\r\n> I have added two more extra methods `getDropzone` and `getAllFiles` which returns **dropzone instance** and **dropzone files** respectively. These methods do not accept any _arguments_ and only work with _ng-dropzone_.\r\n\r\n> If `$scope.dzMethods.method` throws _undefined_ error, wrap it in `$timeout(function(){...})`. This happens because you are referencing an object that is empty as dropzone is not yet property linked with the controller scope.\r\n\r\n***\r\n\r\n## 6. Buffer paste\r\nuse **[ng-buffer-dropzone](https://github.com/thatisuday/ng-buffer-dropzone)** for image buffer paste on dropzone.\r\n\r\n***\r\n\r\n## 7. Complaints & Contribute\r\n1. Feel free to create as many issues as you want to report bugs.\r\n2. Take a fork and create pull request for bug fixes and enhancements.\r\n3. Please raise an issue if `dropzone.js` have new updates.\r\n\r\n***\r\n\r\n## Updates\r\n1. Version 2.0.0 out\r\n2. Lesson on how to mock files from server into your dropzone : [Wiki here](https://github.com/thatisuday/ng-dropzone/wiki/Mock-files-(already-uploaded)-from-server-into-dropzone) [Preview here](https://rawgit.com/thatisuday/ng-dropzone/master/demo/server-mock.html)\r\n\r\n***\r\n\r\n### Liked it? Give it a star 🌟. I would love it :)\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/thatisuday/ng-dropzone.git"
  },
  "scripts": {
    "build": "gulp build",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "2.0.2"
}
