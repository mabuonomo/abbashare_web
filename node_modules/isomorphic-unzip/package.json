{
  "_args": [
    [
      {
        "raw": "isomorphic-unzip@^1.1.0",
        "scope": null,
        "escapedName": "isomorphic-unzip",
        "name": "isomorphic-unzip",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "/home/mario/projects/omnia/meteor_abbashare/node_modules/isomorphic-pkg-reader"
    ]
  ],
  "_from": "isomorphic-unzip@>=1.1.0 <2.0.0",
  "_id": "isomorphic-unzip@1.1.1",
  "_inCache": true,
  "_location": "/isomorphic-unzip",
  "_nodeVersion": "4.4.2",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/isomorphic-unzip-1.1.1.tgz_1470365509632_0.9947945771273226"
  },
  "_npmUser": {
    "name": "xiaoyuze88",
    "email": "xiaoyuze88@gmail.com"
  },
  "_npmVersion": "3.8.2",
  "_phantomChildren": {
    "ieee754": "1.1.8",
    "isarray": "1.0.0"
  },
  "_requested": {
    "raw": "isomorphic-unzip@^1.1.0",
    "scope": null,
    "escapedName": "isomorphic-unzip",
    "name": "isomorphic-unzip",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/isomorphic-pkg-reader"
  ],
  "_resolved": "https://registry.npmjs.org/isomorphic-unzip/-/isomorphic-unzip-1.1.1.tgz",
  "_shasum": "6470f1c42995e912782882d120e8a8be97a001b2",
  "_shrinkwrap": null,
  "_spec": "isomorphic-unzip@^1.1.0",
  "_where": "/home/mario/projects/omnia/meteor_abbashare/node_modules/isomorphic-pkg-reader",
  "author": {
    "name": "xiaoyuze88"
  },
  "browser": "./zip-browser.js",
  "bugs": {
    "url": "https://github.com/TencentWSRD/isomorphic-unzip/issues"
  },
  "dependencies": {
    "buffer": "^4.6.0",
    "yauzl": "^2.4.2"
  },
  "description": "Unzipping files, simple wrap for zip.js(for browser) and yauzl(for nodejs), make the apis consistent for NodeJS/Webpack/Browserify.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "6470f1c42995e912782882d120e8a8be97a001b2",
    "tarball": "https://registry.npmjs.org/isomorphic-unzip/-/isomorphic-unzip-1.1.1.tgz"
  },
  "gitHead": "f459dd91e8db9e0e5f87a356a4423dfcd09cf8cd",
  "homepage": "https://github.com/TencentWSRD/isomorphic-unzip",
  "keywords": [
    "Javascript",
    "NodeJS",
    "Browserify",
    "WebPack",
    ".apk",
    ".ipa",
    "manifest",
    "parser"
  ],
  "license": "MIT",
  "main": "./zip-node.js",
  "maintainers": [
    {
      "name": "xiaoyuze88",
      "email": "xiaoyuze88@gmail.com"
    }
  ],
  "name": "isomorphic-unzip",
  "optionalDependencies": {},
  "readme": "# isomorphic-unzip\n\nThis is part of the project [isomorphic-pkg-reader](https://npmjs.com/package/isomorphic-pkg-reader).\n\nNow it's only provide a few simple apis for supporting `isomorphic-pkg-reader`,\nit can read the specific entries from a .zip file and parse them to Buffer, it works both for NodeJS and Browsersify/Webpack.\n\nBasically it's just a wrap for `yauzl`(NodeJS) and `zip.js`(browser), and make it has nearly consistence apis. \n\n### Install\n\n``` js\nnpm i isomorphic-unzip\n```\n\n```javascript\n// usage\n\nvar Unzip = require('isomorphic-unzip');\n\n// In browser, pass a File/Blob into the constructor\nvar unzip = new Unzip(file /* or blob */);\n\n// In NodeJS, pass the dest path of your file\nvar unzip = new Unzip('/location/to/your/path');\n\n// They have the same api: getBuffer\nunzip.getBuffer(['androidmanifest.xml', 'resources.arsc'], function(err, buffers) {\n  if(err) throw err;\n\n\n  // buffers it's like {'androidmanifest.xml': Buffer, 'resources.arsc': Buffer}\n  console.log(buffers);\n});\n\n```\n\n### API\n\n#### unzip.getBuffer(whatYouNeed, callback)\n`whatYouNeed` is an array of String/RegExp/Function that contains the entry name you want to access, the `callback` will receive two params as callback(error, buffers).\n`buffers` is a object that use the entry name as key, Buffer object as value.\n\nWhen an check function is passed into the `whatYouNeed` array, it will be called like: \ncheckFunc(entryName), when it return `true`, means this is what you need, just like `Array.prototype.filter`.\n\n\n#### unzip.getEntries(callback, onEnd)\n\nThings become a little different here between NodeJS/browser because in Node we use `lazy read entry` feature,\nthat means you need go through the next entry by yourself.\n   \n##### So in NodeJS\nThe callback function will be called like: `callback(error, zipfile, entry, next)`,\nyou can get the entry's basic information by the `entry` param, also you can get this entry's data via a static method `Unzip.getEntryData`.\n\n```javascript\n// The eaisest example is just in the source code in 'zip-node.js - Unzip.prototype.getBuffer'\nunzip.getEntries(function(error, zipfile, entry, next) {\n  if (error) throw error;\n\n  // Do some stuff with the entry, like find some specific entry out.\n  if (entry.fileName) {\n  \n  }\n});\n\n```\n \n##### In browser\nIt's more simpler in browser, the callback function will be called like: `callback(entries)`, all entries will be passed as an array to the callback function.\nYou can find more information from the `zip.js` document [here](http://gildas-lormeau.github.io/zip.js/core-api.html).\n\n\n##### Notice\nThe `entry` object is different between NodeJS and browser, we havn't make it consistence yet, please checkout each documents for more details([yauzl(NodeJS)](https://www.npmjs.com/package/yauzl#class-entry), [zip.js(browser)](http://gildas-lormeau.github.io/zip.js/core-api.html)).\n\n\n#### Unzip.getEntryData(zipfile, entry, callback)\n(NodeJS only)\n\nThis method is only for NodeJS, basically you can just use it together with `unzip.getEntries` when you want to access this entry's data.\n\nMore information you can get from the `yauzl`'s [document](https://www.npmjs.com/package/yauzl#usage).\n\nWe haven't make it totally consistence between NodeJS/browser yet, maybe latter.\n \n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/TencentWSRD/isomorphic-unzip.git"
  },
  "scripts": {
    "start": "node example/webpack-dev-server.js --history-api-fallback --hot --inline --progress --color --profile --display-modules",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.1.1"
}
