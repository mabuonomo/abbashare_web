{
  "_args": [
    [
      {
        "raw": "simple-get@^1.4.2",
        "scope": null,
        "escapedName": "simple-get",
        "name": "simple-get",
        "rawSpec": "^1.4.2",
        "spec": ">=1.4.2 <2.0.0",
        "type": "range"
      },
      "/home/mario/projects/omnia/meteor_abbashare/node_modules/prebuild-install"
    ]
  ],
  "_from": "simple-get@>=1.4.2 <2.0.0",
  "_id": "simple-get@1.4.3",
  "_inCache": true,
  "_location": "/simple-get",
  "_nodeVersion": "2.1.0",
  "_npmUser": {
    "name": "feross",
    "email": "feross@feross.org"
  },
  "_npmVersion": "2.10.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "simple-get@^1.4.2",
    "scope": null,
    "escapedName": "simple-get",
    "name": "simple-get",
    "rawSpec": "^1.4.2",
    "spec": ">=1.4.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/prebuild-install"
  ],
  "_resolved": "https://registry.npmjs.org/simple-get/-/simple-get-1.4.3.tgz",
  "_shasum": "e9755eda407e96da40c5e5158c9ea37b33becbeb",
  "_shrinkwrap": null,
  "_spec": "simple-get@^1.4.2",
  "_where": "/home/mario/projects/omnia/meteor_abbashare/node_modules/prebuild-install",
  "author": {
    "name": "Feross Aboukhadijeh",
    "email": "feross@feross.org",
    "url": "http://feross.org/"
  },
  "browser": {
    "unzip-response": false
  },
  "bugs": {
    "url": "https://github.com/feross/simple-get/issues"
  },
  "dependencies": {
    "once": "^1.3.1",
    "unzip-response": "^1.0.0",
    "xtend": "^4.0.0"
  },
  "description": "Simplest way to make http get requests. Supports HTTPS, redirects, gzip/deflate, streams in < 100 lines.",
  "devDependencies": {
    "concat-stream": "^1.4.7",
    "self-signed-https": "^1.0.5",
    "standard": "^5.1.0",
    "string-to-stream": "^1.0.0",
    "tape": "^4.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "e9755eda407e96da40c5e5158c9ea37b33becbeb",
    "tarball": "https://registry.npmjs.org/simple-get/-/simple-get-1.4.3.tgz"
  },
  "gitHead": "d212b1022d21b49c8ec83acf251d1dc4aeb38ca3",
  "homepage": "https://github.com/feross/simple-get",
  "keywords": [
    "request",
    "http",
    "GET",
    "get request",
    "http.get",
    "redirects",
    "follow redirects",
    "gzip",
    "deflate",
    "https",
    "http-https",
    "stream",
    "simple request",
    "simple get"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "feross",
      "email": "feross@feross.org"
    }
  ],
  "name": "simple-get",
  "optionalDependencies": {},
  "readme": "# simple-get [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url]\n\n[travis-image]: https://img.shields.io/travis/feross/simple-get.svg?style=flat\n[travis-url]: https://travis-ci.org/feross/simple-get\n[npm-image]: https://img.shields.io/npm/v/simple-get.svg?style=flat\n[npm-url]: https://npmjs.org/package/simple-get\n[downloads-image]: https://img.shields.io/npm/dm/simple-get.svg?style=flat\n[downloads-url]: https://npmjs.org/package/simple-get\n\n### Simplest way to make http get requests\n\n## features\n\nThis module is designed to be the lightest possible wrapper on top of node.js `http`, but supporting:\n\n- follows redirects\n- automatically handles gzip/deflate responses\n- supports HTTPS\n- supports convenience `url` key so there's no need to use `url.parse` on the url when specifying options\n\nAll this in < 100 lines of code.\n\n## install\n\n```\nnpm install simple-get\n```\n\n## usage\n\n### simple GET request\n\nDoesn't get easier than this:\n\n```js\nvar get = require('simple-get')\n\nget('http://example.com', function (err, res) {\n  if (err) throw err\n  console.log(res.statusCode) // 200\n  res.pipe(process.stdout) // `res` is a stream\n})\n```\n\n### even simpler GET request\n\nIf you just want the data, and don't want to deal with streams:\n\n```js\nvar get = require('simple-get')\n\nget.concat('http://example.com', function (err, data, res) {\n  if (err) throw err\n  console.log(res.statusCode) // 200\n  console.log(data) // 'this is the server response'\n})\n```\n\n### POST, PUT, PATCH, HEAD, DELETE support\n\nFor `POST`, call `get.post` or use option `{ method: 'POST' }`.\n\n```js\nvar get = require('simple-get')\n\nvar opts = {\n  url: 'http://example.com',\n  body: 'this is the POST body'\n}\nget.post(opts, function (err, res) {\n  if (err) throw err\n  res.pipe(process.stdout) // `res` is a stream\n})\n```\n\nA more complex example:\n\n```js\nvar get = require('simple-get')\nvar concat = require('concat-stream')\n\nget({\n  url: 'http://example.com',\n  method: 'POST',\n  body: 'this is the POST body',\n\n  // simple-get accepts all options that node.js `http` accepts\n  // See: http://nodejs.org/api/http.html#http_http_request_options_callback\n  headers: {\n    'user-agent': 'my cool app'\n  }\n}, function (err, res) {\n  if (err) throw err\n\n  // All properties/methods from http.IncomingResponse are available,\n  // even if a gunzip/inflate transform stream was returned.\n  // See: http://nodejs.org/api/http.html#http_http_incomingmessage\n  res.setTimeout(10000)\n  console.log(res.headers)\n\n  res.pipe(concat(function (data) {\n    // `data` is the decoded response, after it's been gunzipped or inflated\n    // (if applicable)\n    console.log('got the response: ' + data)\n  }))\n\n})\n```\n\n## license\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/feross/simple-get.git"
  },
  "scripts": {
    "test": "standard && tape test/*.js"
  },
  "version": "1.4.3"
}
