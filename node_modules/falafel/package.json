{
  "_args": [
    [
      {
        "raw": "falafel@^2.1.0",
        "scope": null,
        "escapedName": "falafel",
        "name": "falafel",
        "rawSpec": "^2.1.0",
        "spec": ">=2.1.0 <3.0.0",
        "type": "range"
      },
      "/home/mario/projects/omnia/meteor_abbashare/node_modules/static-module"
    ]
  ],
  "_from": "falafel@>=2.1.0 <3.0.0",
  "_id": "falafel@2.1.0",
  "_inCache": true,
  "_location": "/falafel",
  "_nodeVersion": "6.3.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/falafel-2.1.0.tgz_1490753752021_0.7184973282273859"
  },
  "_npmUser": {
    "name": "substack",
    "email": "substack@gmail.com"
  },
  "_npmVersion": "4.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "falafel@^2.1.0",
    "scope": null,
    "escapedName": "falafel",
    "name": "falafel",
    "rawSpec": "^2.1.0",
    "spec": ">=2.1.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/static-module"
  ],
  "_resolved": "https://registry.npmjs.org/falafel/-/falafel-2.1.0.tgz",
  "_shasum": "96bb17761daba94f46d001738b3cedf3a67fe06c",
  "_shrinkwrap": null,
  "_spec": "falafel@^2.1.0",
  "_where": "/home/mario/projects/omnia/meteor_abbashare/node_modules/static-module",
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "bugs": {
    "url": "https://github.com/substack/node-falafel/issues"
  },
  "dependencies": {
    "acorn": "^5.0.0",
    "foreach": "^2.0.5",
    "isarray": "0.0.1",
    "object-keys": "^1.0.6"
  },
  "description": "transform the ast on a recursive walk",
  "devDependencies": {
    "acorn-jsx": "^3.0.0",
    "covert": "^1.1.0",
    "glob": "^6.0.4",
    "tape": "^4.0.0"
  },
  "directories": {
    "example": "example",
    "test": "test"
  },
  "dist": {
    "shasum": "96bb17761daba94f46d001738b3cedf3a67fe06c",
    "tarball": "https://registry.npmjs.org/falafel/-/falafel-2.1.0.tgz"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "gitHead": "4ccca36056d1b51f4af7c0d0e69462a248857844",
  "homepage": "https://github.com/substack/node-falafel#readme",
  "keywords": [
    "ast",
    "burrito",
    "source",
    "syntax",
    "traversal",
    "tree"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "substack",
      "email": "mail@substack.net"
    },
    {
      "name": "bobthecow",
      "email": "npm@0x7f.us"
    },
    {
      "name": "nanodeath",
      "email": "nanodeath@gmail.com"
    },
    {
      "name": "alltom",
      "email": "tom@alltom.com"
    },
    {
      "name": "eugeneware",
      "email": "eugene@noblesamurai.com"
    }
  ],
  "name": "falafel",
  "optionalDependencies": {},
  "readme": "# falafel\n\nTransform the [ast](http://en.wikipedia.org/wiki/Abstract_syntax_tree) on a\nrecursive walk.\n\n[![browser support](http://ci.testling.com/substack/node-falafel.png)](http://ci.testling.com/substack/node-falafel)\n\n[![build status](https://secure.travis-ci.org/substack/node-falafel.png)](http://travis-ci.org/substack/node-falafel)\n\nThis modules uses [acorn](https://npmjs.org/package/acorn) to create an AST from\nsource code.\n\n![falafel d√∂ner](http://substack.net/images/falafel.png)\n\n# example\n\n## array.js\n\nPut a function wrapper around all array literals.\n\n``` js\nvar falafel = require('falafel');\n\nvar src = '(' + function () {\n    var xs = [ 1, 2, [ 3, 4 ] ];\n    var ys = [ 5, 6 ];\n    console.dir([ xs, ys ]);\n} + ')()';\n\nvar output = falafel(src, function (node) {\n    if (node.type === 'ArrayExpression') {\n        node.update('fn(' + node.source() + ')');\n    }\n});\nconsole.log(output);\n```\n\noutput:\n\n```\n(function () {\n    var xs = fn([ 1, 2, fn([ 3, 4 ]) ]);\n    var ys = fn([ 5, 6 ]);\n    console.dir(fn([ xs, ys ]));\n})()\n```\n\n# methods\n\n``` js\nvar falafel = require('falafel')\n```\n\n## falafel(src, opts={}, fn)\n\nTransform the string source `src` with the function `fn`, returning a\nstring-like transformed output object.\n\nFor every node in the ast, `fn(node)` fires. The recursive walk is a\npre-traversal, so children get called before their parents.\n\nPerforming a pre-traversal makes it easier to write nested transforms since\ntransforming parents often requires transforming all its children first.\n\nThe return value is string-like (it defines `.toString()` and `.inspect()`) so\nthat you can call `node.update()` asynchronously after the function has\nreturned and still capture the output.\n\nInstead of passing a `src` you can also use `opts.source`.\n\nAll of the `opts` will be passed directly to\n[acorn](https://npmjs.org/package/acorn).\n\n## custom parser\n\nYou may pass in an instance of acorn to the opts as `opts.parser` to use that\nversion instead of the version of acorn packaged with this library.\n\n```js\nvar acorn = require('acorn-jsx');\n\nfalafel(src, {parser: acorn, plugins: { jsx: true }}, function(node) {\n  // this will parse jsx\n});\n```\n\n# nodes\n\nAside from the regular [esprima](http://esprima.org) data, you can also call\nsome inserted methods on nodes.\n\nAside from updating the current node, you can also reach into sub-nodes to call\nupdate functions on children from parent nodes.\n\n## node.source()\n\nReturn the source for the given node, including any modifications made to\nchildren nodes.\n\n## node.update(s)\n\nTransform the source for the present node to the string `s`.\n\nNote that in `'ForStatement'` node types, there is an existing subnode called\n`update`. For those nodes all the properties are copied over onto the\n`node.update()` function.\n\n## node.parent\n\nReference to the parent element or `null` at the root element.\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install falafel\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/node-falafel.git"
  },
  "scripts": {
    "coverage": "covert test/*.js",
    "test": "node --harmony test/bin/run.js test/*.js"
  },
  "testling": {
    "browsers": {
      "chrome": [
        "20.0"
      ],
      "firefox": [
        "10.0",
        "15.0"
      ],
      "iexplore": [
        "6.0",
        "7.0",
        "8.0",
        "9.0"
      ],
      "opera": [
        "12.0"
      ],
      "safari": [
        "5.1"
      ]
    },
    "files": "test/*.js"
  },
  "version": "2.1.0"
}
