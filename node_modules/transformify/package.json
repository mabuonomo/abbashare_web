{
  "_args": [
    [
      {
        "raw": "transformify@~0.1.1",
        "scope": null,
        "escapedName": "transformify",
        "name": "transformify",
        "rawSpec": "~0.1.1",
        "spec": ">=0.1.1 <0.2.0",
        "type": "range"
      },
      "/home/mario/projects/omnia/meteor_abbashare/node_modules/exposify"
    ]
  ],
  "_from": "transformify@>=0.1.1 <0.2.0",
  "_id": "transformify@0.1.2",
  "_inCache": true,
  "_location": "/transformify",
  "_npmUser": {
    "name": "thlorenz",
    "email": "thlorenz@gmx.de"
  },
  "_npmVersion": "1.3.22",
  "_phantomChildren": {
    "core-util-is": "1.0.2",
    "inherits": "2.0.3"
  },
  "_requested": {
    "raw": "transformify@~0.1.1",
    "scope": null,
    "escapedName": "transformify",
    "name": "transformify",
    "rawSpec": "~0.1.1",
    "spec": ">=0.1.1 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/exposify"
  ],
  "_resolved": "https://registry.npmjs.org/transformify/-/transformify-0.1.2.tgz",
  "_shasum": "9a4f42a154433dd727b80575428a3c9e5489ebf1",
  "_shrinkwrap": null,
  "_spec": "transformify@~0.1.1",
  "_where": "/home/mario/projects/omnia/meteor_abbashare/node_modules/exposify",
  "author": {
    "name": "Thorsten Lorenz",
    "email": "thlorenz@gmx.de",
    "url": "http://thlorenz.com"
  },
  "bugs": {
    "url": "https://github.com/thlorenz/transformify/issues"
  },
  "dependencies": {
    "readable-stream": "~1.1.9"
  },
  "description": "Takes a synchronous function that transforms a string and converts it into a transform compatible with browserify, catw and mutiny.",
  "devDependencies": {
    "apply-transform": "~0.1.3",
    "nave": "~0.4.3",
    "tap": "~0.4.3"
  },
  "directories": {},
  "dist": {
    "shasum": "9a4f42a154433dd727b80575428a3c9e5489ebf1",
    "tarball": "https://registry.npmjs.org/transformify/-/transformify-0.1.2.tgz"
  },
  "engine": {
    "node": ">=0.6"
  },
  "homepage": "https://github.com/thlorenz/transformify",
  "keywords": [
    "transform",
    "stream",
    "browserify",
    "browserify-transform",
    "catw",
    "mutiny"
  ],
  "license": {
    "type": "MIT",
    "url": "https://github.com/thlorenz/transformify/blob/master/LICENSE"
  },
  "main": "index.js",
  "maintainers": [
    {
      "name": "thlorenz",
      "email": "thlorenz@gmx.de"
    }
  ],
  "name": "transformify",
  "optionalDependencies": {},
  "readme": "# transformify [![build status](https://secure.travis-ci.org/thlorenz/transformify.png)](http://travis-ci.org/thlorenz/transformify)\n\nTakes a synchronous function that transforms a string and converts it into a transform compatible with browserify, catw and mutiny.\n\n```js\nvar transformify = require('transformify');\n\nfunction toUpper(s) {\n  return s.toUpperCase();\n}\n\nrequire('fs').createReadStream(__filename)\n  .pipe(transformify(toUpper)(/* file not used */))\n  .pipe(process.stdout);\n```\n\n### Output\n\n```\nVAR TRANSFORMIFY = REQUIRE('TRANSFORMIFY')\n\nFUNCTION TOUPPER(S) {\n  RETURN S.TOUPPERCASE();\n}\n\nREQUIRE('FS').CREATEREADSTREAM(__FILENAME)\n  .PIPE(TRANSFORMIFY(TOUPPER)(/* FILE NOT USED */))\n  .PIPE(PROCESS.STDOUT);\n```\n\n## Installation\n\n    npm install transformify\n\n## API\n\n### transformify(fn)\n```\n/**\n * Takes a synchronous function that transforms a string and returns a transform compatible with browserify, catw and mutiny.\n * \n * @name transformify\n * @function\n * @param {Function(String):String} fn \n * @return {Function(String):TransformStream} function that returns a transform stream\n */\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/thlorenz/transformify.git"
  },
  "scripts": {
    "test": "if [ -e $TRAVIS ]; then npm run test-all; else npm run test-main; fi",
    "test-0.10": "nave use 0.10 npm run test-main",
    "test-0.8": "nave use 0.8 npm run test-main",
    "test-all": "npm run test-main && npm run test-0.8 && npm run test-0.10",
    "test-main": "tap test/*.js"
  },
  "version": "0.1.2"
}
